{"title":"Changing default gateway in Unifi Security Gateway (USG)","date":"2019-06-11T23:38:40.000Z","url":"/Changing-default-gateway-in-Unifi-Security-Gateway-USG/","content":"I’ve recently replaced my home network hardware with the Unifi family, and I’ve been satisified about them.I live in China, and I have a Linux box that runs transparent proxy. I need to change the DHCP default gateway to something else, but it was nowhere found in the GUI. After some searching I have the solution here. First SSH into your USG, and do the following:Remember to follow this to make the config persistant."},{"title":"Solution to Battlefield V keeping crashing on Win10","date":"2019-05-02T12:35:02.000Z","url":"/Solution-to-Battlefield-V-keeping-crashing-on-Win10/","content":"Today I wanted to play BFV and upon launching it just crashes without any error message. My environment:i7-7700k, overclocked to 4.8 GHz2 * 8 GiB 3200 MHz RAMNVIDIA RTX 2080 overclocked240 Hz monitorDX12, DXR on, FFR offI fixed it by doing the followings:When playing BFV, make sure you do NOT overclock your GPU. You can still use Afterburner and RTSS as long as you set the application detection level to high in RTSS, otherwise the game will crash.Go to bfv.exe and go to the Properties > Compatibility, check Disable full screen optimizations and click on Change high DPI settings. Check the box that says “Override high DPI scaling behavior. Scaling performed by”. Select “Application” in the drop down box. Click ok.On my machine, after some point it runs out of memory when in-game, it also causes stuttering. Use  to solve it. This is a known Windows issue.Run DDU to do a clean-reinstall of the graphics drivers. Remember to screenshot the settings in the NVIDIA control panel, as running DDU will erase them as well.By the way:In Nvidia Control Panel, make sure BFV’s Maximum pre-rendered frames is set to Use the 3D application setting, otherwise it causes CPU bottleneck on my machine. This improves FPS.If you have a high-end machine, turn off Motion Blur in-game, which improves FPS.Using Fullscreen is fine. It will not crash the game."},{"title":"Setting up a WireGuard server on OpenWRT","date":"2019-02-21T14:02:57.000Z","url":"/Setting-up-a-WireGuard-server-on-OpenWRT/","content":"Sometimes it can be useful to be able to connect back to your home network to access some internal resources. I’ll share how I set up a WireGuard server on OpenWRT.First install some WireGuard packages.Next go to , name the VPN interface wg0, select WireGuard VPN for Protocol of the new interface and press submit.We need to generate some keypairs for the server and clients. Make sure to keep them safe.Head to the configuration page of wg0 interface (). In General Setup tab, paste the content of /etc/wireguard/server-privatekey into Private Key. You can change Listen Port to any unused port you like. In IP Addresses, choose a subnet IP CIDR, for example 10.200.200.1/24. This will be the subnet of the VPN.Next, let’s configure some peers. Some backgrounds here. First, WireGuard does not have the concept of server/client, instead, every WireGuard device is regarded as a peer to each other. Before establishing a successful connection, a proper config setup on both side is required.Add a peer using the Add button. The peer we’re configuring here will be the “client”. In Public Key, paste the content of /etc/wireguard/client-publickey. In Allowed IPs, enter a random IP address in the subnet you previously chose, for example 10.200.200.2/24. This will be the client’s internal IP address.Next, make sure Route Allowed IPs is checked. You most likely won’t need to configure Endpoint Host and Endpoint Port as we will be manually connecting to the OpenWRT WireGuard device on the client, instead of having OpenWRT aggressively establishing a connection. Put the recommended value 25 into Persistent Keep Alive.In Firewall Settings tab, assign lan zone for the interface.Hit Save &amp; Apply.Next run the following to make a new Traffic Rule in OpenWRT firewall. Make sure to change 99999 to your previously chosen port for WireGuard interface.The router side is done, I’ll demonstrate how to set up WireGuard on iOS. Download WireGuard app at . Open the app, press the + button on the top-right side and choose Create from scratch. Put any name you like on the Name field. Paste the keypairs of the client into their respective fields. In Addresses, put the exact same of what you specified in Allowed IPs of the client peer, e.g. 10.200.200.2/24. In DNS servers, put the router’s LAN IP address in. Don’t touch Listen port and MTU unless you know what you’re doing.Add a new peer down below, and paste the server’s public key into Public key. Leave Preshared key field empty. In Endpoint, specify the router’s IP address or a domain name, ending with :port. For example vpn.foobar.dev:1234. Put 0.0.0.0/0 into Allowed IPs. Leave the rest default and hit save. Connect to the server and you should be able to access your home’s internal network on the public Internet."},{"title":"Running Clash on OpenWrt as a transparent proxy","date":"2019-01-18T18:49:55.000Z","url":"/Running-Clash-on-OpenWrt-as-a-transparent-proxy/","content":"As you would have been aware of that I live in China where internet is under strict censorship. I’ve been discovering ways to access the blocked internet resources.So recently I switched to a x86 mini computer that runs Proxmox VE, which has an OpenWRT VM running as a router. In this blog post, I’m using Clash, a new software that is quite the same to Surge. They both support “rules” mode that routes internet traffic on your will. It’s so convenient that you don’t have to use gfwlist anymore, and they are more precise and customizable, like you can route Google to a Hong Kong proxy, YouTube to United States, Netflix to Japan and so forth. Clash also has a redir mode which can be used with iptables to redirect the TCP packets. We’re also gonna utilize Unbound and DNSCrypt-proxy to solve the DNS pollution issue.Download the toolsFollow this guide to install DNSCrypt-proxy:  them into servicesPut the following script to /etc/init.d/clash:Then run the following to make it executable:This init.d script also immediately restarts clash when it exits for whatever reason. If it crashes 5 times in 5 minutes, it won’t be restarted anymore.The logs are in /var/log/messages.Write Clash ConfigurationI’m not covering how to write Clash configuration in this blog post, but these options must be set as follows:Let’s tear it down. 9090 is the redir port, allow-lan allows other devices in LAN to access the proxy and external-controller is the API that we’re gonna use later to control Clash.Clash will now forward DNS requests from :53 to unbound (:5353), which forwards DNS requests to DNSCrypt-proxy (:5678). DNSCrypt-proxy will then securely get the correct DNS responses using DoH.Configure dnsmasqConfigure DNSCrypt-proxyUse the example config with these options changed:Configure UnboundFirst download named.cache from InterNIC:Then enable manual config so we can configure Unbound directly using it’s config file:To make China domains solve through 119.29.29.29 instead of foreign DNSCrypt-proxy, we’re using , this is the config I’m currently using:Launch the servicesRun the following to make Clash, DNScrypt-proxy and Unbound launch at system startup:Apply the changes:Redirect the traffic to ClashGo to , append the following to the end of rules. Be aware that you need to change YOUR_SSH_PORT.You can now open your browser now and go to  to see if it works!Control ClashRemember external-controller? We’re gonna make use of it… right now.There’s a fantastic web interface that does exactly the work: . Use your OpenWrt IP address, and port 6170.Be ware that Clash does not remember your choices of servers between restarts.Check the logsLast wordsI’m also using WireGuard to connect back to my home network when I’m not in house. If you want to know further more how to configure WireGuard to work with this approach (Clash + Unbound), comment down below.Resources"},{"title":"Change GRUB timeout in OpenWrt to speed up boot process","date":"2019-01-17T15:57:55.000Z","url":"/Change-GRUB-timeout-in-OpenWrt-to-speed-up-boot-process/","content":"Recently I’m playing with my OpenWrt router on a PVE machine, and I noticed that there’s a 5 second timeout in the boot procedure.It’s important to have a router boot up fast. So I searched online how to change the timeout setting. Unfortunately OpenWrt isn’t Debian, while most tutorials I found online is Debian or RHEL. So stuff works quite differently.After some digging I found that you can actually override /boot/grub/grub.cfg, because there’s no grub-mkconfig. But /boot was read-only for me, so I first had to runAnd finally I could doAccording to the GRUB documentation:I set GRUB_TIMEOUT to 0, and it worked flawlessly."},{"title":"Build tmux on CentOS 7","date":"2018-11-25T06:24:40.000Z","url":"/build-tmux-on-centos-7/","tags":["tmux"],"categories":["linux"],"content":"So I have been recently annoyed with some super strange display issues that tmux 2.7 on my server produces. After some digging I decided to re-build version 2.8 (which is the latest release as of time of writing) of tmux.We’ll be grabbing the official tmux repo from , build version 2.8 and install it. Note that you’ll need root privileges to install tmux."},{"title":"Solve \"The Firebase CLI login request was rejected or an error occurred\" when behind a proxy on macOS","date":"2018-11-08T05:13:47.000Z","url":"/solve-firebase-login-error-behind-proxy-mac/","content":"TL;DR: Use Proxifier if you’re using HTTP/SOCKS proxyToday when I tried to login to Firebase CLI I ran into an issue that stopped me from logging in. After approving the login request on Google’s login page, the page kept loading something (a page served on localhost) and eventually it went to this page:In CLI:I searched on Google, and I came across this StackOverflow answer. Looks like there’s a known bug that Firebase CLI can’t work properly behind a proxy. I quickly realized I have environment variable ALL_PROXY, http_proxy and https_proxy set because I’m using a proxy.The ultimate solution is to use a system-wide proxy, which in this case Proxifier is a very good choice, should you’re using macOS. This kind of software makes all traffic go through a SOCKS5 proxy, so you won’t have to manually set the env variable and therefore the problem gets solved."},{"title":"Redirect domains to specific URLs with Traefik","date":"2018-10-20T17:39:28.000Z","url":"/redirect-domains-to-specific-urls-with-traefik/","content":"I recently again needed to redirect a specific domain to a URL. For example redirecting google.birkhoff.me to  used to run some Docker containers which runs some web servers that redirect HTTP requests to make this work. I knew from the beginning that it wasn’t the most elegant or efficient way to do so, but I didn’t have any other idea for that. A friend once told me Firebase will do the job, but it’s limited to redirecting to a domain, not a URL, so no.So today I was about to do the same thing (you can see me forked MorbZ/docker-web-redirect to BirkhoffLee/docker-web-redirect today), changed a bit in the repo and when I launched it up. All of a sudden when I was dealing with Traefik stuff I thought Traefik could’ve been doing the job for me, if I configured it correctly.After searching around for a bit, some related GitHub issues came up, without the exact solutions. My workaround has some benefits:does not need any other program to handle requests, therefore it’s efficientbuilt-in regex redirection supportcentralized, easier to manageThis is the configuration block that you would want to put in your traefik.toml:I hope I can get a centralized, web-based management panel that runs on a Docker container so I can manage these stuff more efficiently. If you have any other solutions to this topic, please comment down below to let me know!"},{"title":"Forza Horizon 4 PC won't launch, or says sign-in needed","date":"2018-10-01T18:15:19.000Z","url":"/forza-horizon-4-pc-wont-launch-or-says-sign-in-needed/","content":"So today I excitedly opened up my pre-ordered Forza Horizon 4 and seems that the splash screen shows up for 4 seconds, disappears and the game won’t launch.I’ve searched on Internet and found out you need to download a random app from the Microsoft Store app and the game launches.Note that you will need to have RTSS application detection level set to None (globally) if you have that installed.It wasn’t the end. When the beautiful music started, the awesome graphics showed up, I immediately pressed Y on my Xbox One controller. The game still won’t let me play. It’s a $60 game and I shouldn’t be treated like this. Luckily I found another fix on the internet, it turns out that you need to do the following steps to get everything working.Press Windows key + XThen click Windows Powershell (Admin)Now type the following commands and hit Enter keyOpen Xbox app, and you should be able to sign in and play. Enjoy!References"},{"title":"macOS Mojave: Continuity Camera","date":"2018-09-25T15:51:29.000Z","url":"/macos-mojave-continuity-camera/","content":"Today Apple pushed the new major update of macOS, Mojave. One of its most important new feature is Continuity Camera. In short terms, your Mac gets the photo file immediately from your iPhone/iPad when you take one.Here’s how it works:You right-click on a supported App, or simply your Mac desktopChoose Import from iPhone &gt; Take PhotoYour iPhone automatically opens Camera appYou set the Flashlight, focus, brightness or something else, and you press the shoot buttonYou click on Use Photo on your iPhoneYour Mac immediately gets the photo file, to where your initial import request came from, for example, saving to your desktop.I’ve always loved how Apple’s products work simultaneously, like universal clipboard has been very useful too."},{"title":"Improve your CLI experience","date":"2018-09-11T14:26:43.000Z","url":"/improve-your-cli-experience/","content":"I recently read this awesome blog post and I’m desperate to share it to you :)This blog post mainly introduces:bat: cat super-powered. Built-in syntax highlighting &amp; scrolling.prettyping: Beautified ping. You can also alias this to the default ping.fzf: A fuzzy search against the terminal history, with a fully interactive preview of the possible matches.htop: top improveddiff-so-fancy: diff enhancedfd: a modern replacement for findncdu: DaisyDisk alternative in CLI. Calculates disk usage, interactively.tldr: Throw away man pages! tldr is the new hype.ack / ag: I don’t personally use it, but I’m looking forward to using it in the future.jq: JSON parser in the CLI"},{"title":"Make sudo authenticate with Touch ID in a tmux session","date":"2018-09-01T17:45:34.000Z","url":"/make-sudo-authenticate-with-touch-id-in-a-tmux/","content":"After the recent switch to , I have been fully working under tmux sessions. Recently I found that the Touch ID authentication for sudo haven’t been working. I searched over the Internet and found out pam_tid.so itself is kinda incompatible with tmux.To solve this, I had to use a simple hack (someone made the solution for us, thanks!). I use fabianishere/pam_reattach, a PAM module for reattaching to the authenticating user’s per-session bootstrap namespace on macOS, and it’s updated just 18 days ago as the time of writing!To install pam_reattach, you will need to run the following commands to download sources, build and finally, install.Ultimately, make sure /etc/pam.d/sudo looks like this in the beginning of file:(Note that on major macOS updates you need to re-do the whole process once again.)References"},{"title":"Chrome extensions that I as a developer/gamer use","date":"2018-08-24T17:26:37.000Z","url":"/chrome-extensions-that-i-as-a-developer-gamer-use/","content":"1PasswordThe best password manager on the market!Claire“Shows an orange cloud in the omnibar when you are browsing a site that uses Cloudflare”CouponMate: Coupon Codes &amp; DealsEditThisCookieEvery web developer should be aware of this extension. Cookie editor.Enhanced SteamSteam web version enhancedFlashcontrol“Block Flash from loading automatically and allow content only on selected sites.”HTTPS EverywhereBy EFFminerBlockI think uBlock Origin should do the work, but I haven’t removed this yet.Nimbus Screenshot &amp; Screen Video RecorderOctotreeAbsolutely recommended. Adds a nice file navigator at the left side of a GitHub repo web page. Very convinent when you need to find a file.Merge WindowsClick to merge all tabs on every Chrome window, pretty convinentOpenload Video OnlyVery convinent when you use Openload frequently ( ͡° ͜ʖ ͡°)When you open an Openload link, it automatically redirects you to the actual video link. When used with a download manager extension (I use IDM), you can download it as soon as you click on the link.PushbulletOne of my favourite extensions. Send everything across your devices.Proxy SwitchyOmegaA must-know and must-have app if you use proxies to access the Internet or behind a firewall like GFW. Extremely recommended.Super Netflix“Change video quality, Control video speed, Upload custom subtitles and much more - Make Your Experience on Netflix More Enjoyable.”TampermonkeyVery recommended. Userscript extension.Toby for Chrome“Better than bookmarks. Organize your browser tabs and access them quickly anywhere.”Not very frequently used, but worth to mention.uBlock OriginA well-known ad-blockerUniversal Bypass“Universal Bypass has bypasses for sites which make you wait (Adf.ly, Adfoc.us, etc.), sites which make you do something (sub2unlock.com, viid.su, etc.) and even trackers (Bit.ly, Goo.gl, T.co, etc.). Plus, you can write custom bypasses!”Very recommendedUser-Agent Switcher for ChromeA must-have for web developers and pentesters.WebRTC Leak Prevent“This will protect against WebRTC leaks.”WebRTC by default would give malicious web apps your real IP address even if you are behind a proxy. Use this to protect your IP address.WorldBrain’s MemexVery helpful &amp; convinent. Very recommended.“Find previously visited websites &amp; PDFs in seconds. Full-text search your browsing history and bookmarks.”"},{"title":"在中國使用 Discord","date":"2018-08-23T10:36:16.000Z","url":"/use-discord-in-china/","content":"背景遊玩國際多人線上遊戲的需求，追求低延遲使用國際網路資源的需求，追求高速度使用 Discord 的需求，追求低延遲、高穩定分析使用國際網路資源：使用 Shadowsocks 即可線上遊戲：Shadowsocks 雖然也可以搭配 SSTAP 作「全局加速」，但是穩定性與延遲取決於線路品質，一般來說對於追求低延遲的 FPS 遊戲來說會很慘。因此選擇專業的網易 UU 加速器（注：加速器就是 VPN）。Discord：中國當地的加速器目前只有「奇游加速器」支援加速 Discord，不過奇游的線路品質個人覺得不是很穩定，因此只有 Shadowsocks 這個選擇。做法使用國際網路資源：使用 shadowsocks-windows，瀏覽器設定 SOCKS5 proxy。這取決於你的需求，這裡不多著墨。線上遊戲：網易 UU 加速器Discord：這部分比較麻煩，我目前建議的做法是用 Discord For Windows 搭配 Proxifier + shadowcocks-windows 來完成，而且 Shadowsocks 伺服器必須要支援 UDP 轉發，而且穩定性與延遲都要夠好。我目前在使用 rixCloud 提供的 Shadowsocks 服務，所有 node 經國內伺服器中轉以保證穩定性。因價格因素，推薦公司行號或這方面需求大的人使用。本文重撰前因不夠了解 Proxifier 而推薦 ProxyCap，在這裡說聲抱歉，ProxyCap 與 UU 加速器太容易衝突了，因此不是一個好的方案。Proxifier先在 Proxy Servers 那邊加一下 127.0.0.1:1080 然後在 Proxification Rules 那邊設定一下 Discord 有關的應用程式全部 Proxy 就可以了。效果遊戲透過 UU 加速器大幅降低 latency 與 lossDiscord 透過 Proxifier 再透過 SS 大幅降低 latency 與 loss 且提升穩定性Discord 被 GFW 封鎖的情況可以順便解決小結在中國想用正常的東西都蠻困難的，其實還是建議換到 Teamspeak。可以看看  提供的服務，都是阿里雲上海、杭州之類的伺服器，延遲在我這裡只有 10+ ms，對我來說是非常適合……最後附上一張直連 Discord HK RTC server 的 traceroute:"},{"title":"Analyze disk space usage on CentOS / RedHat with ncdu","date":"2018-08-03T07:40:15.000Z","url":"/analyze-disk-space-usage-on-centos-redhat-with-ncdu/","content":"ncdu is an interactive disk space analyzer software on Linux, which I found itself pretty convinent.InstallationIt’s pretty straightforward, install dependancies, configure, make and make install. Done.UsageIt’s interactive. Use ? to view help.References"},{"title":"Send emails through Mailgun SMTP on CentOS 7","date":"2018-07-30T01:22:09.000Z","url":"/send-email-thru-mailgun-on-centos-7/","tags":["\n- devops\n- server\n- linux\n- tutorial"],"content":"Install the dependencies:In /etc/postfix/main.cf, append the following to the end of file:Run the following to configure the authentication details:And finally test it out!References"},{"title":"Make cron send emails only on errors","date":"2018-07-30T00:56:41.000Z","url":"/make-cron-send-email-only-on-error/","content":"Stop using &gt;/dev/null 2&gt;&amp;1. Use  (somehow aka chronic, do they refer to the same thing?) has been a perfect workaround of the design failure of cron.According to the official website of Cronic:Cronic is a small shim shell script for wrapping cron jobs so that cron only sends email when an error has occurred. Cronic defines an error as any non-trace error output or a non-zero result code.Clear enough. In other words, cronic only prints output when the script that it wraps encounters an issue, otherwise it runs silently.On CentOS, install chronic with the following command:and edit your crontab:Remove &gt;/dev/null 2&gt;&amp;1, add chronic at the beginning of the command, like so:"},{"title":"Changing default shell for a non-root user on your Linux server without being asked for a password","date":"2018-07-25T03:36:40.000Z","url":"/changing-default-shell-for-a-non-root-user-on-your-linux-server-without-being-asked-for-a-password/","content":"When running /usr/bin/chsh -s $(which zsh), chsh asked for a password, but there’s no password for my current user. If running this using sudo, root‘s default shell gets changed.Simple &amp; fast solution: add the following line to the top of /etc/pam.d/chshIf there’s auth required pam_shells.so, change required to sufficient.(I personally suggest to revert the changes to /etc/pam.d/chsh after you finished changing the shell)"},{"title":"SSHd asking for password when added public key to authorized_keys","date":"2018-07-25T02:43:51.000Z","url":"/sshd-asking-password-added-key/","content":"It should be permission issues."},{"title":"Serve Traefik's internal dashboard behind Traefik itself","date":"2018-07-22T22:33:57.000Z","url":"/serve-traefiks-internal-dashboard-behind-traefik/","tags":["\n- server\n- installation\n- introduce\n- docker\n- devops\n- tutorial\n- web\n- proxy\n- network"],"content":"I have recently switched from jwilder/nginx-proxy + JrCs/docker-letsencrypt-nginx-proxy-companion to a more powerful reverse proxy called Traefik. Traefik has built-in ACME support, can be used as a load-balancer and (most importantly) has official Docker support!When I was configuring Traefik’s internal dashboard (the good-looking web UI), I was thinking of serving it behind the proxy itself. But the documantation didn’t say how to do it. It only mentioned to serve the dashboard on a port other than 80 or 443, so you can only access with, for example, 111.222.333.444:7777. I wanted to use something like traefik.birkhoff.me.Well, it needs a tricky hack.You simply define a new entrypoint, I call it “traefik” here. Set the port number to anything you like. Finally give the Traefik container some traefik labels as you would to normal web containers.Traefik.toml:docker-compose.yml:It’s somehow stupid tho."},{"title":"DevOps: Truncate Docker container logs periodically to free up server disk space","date":"2018-07-11T09:48:50.000Z","url":"/devops-truncate-docker-container-logs-periodically-to-free-up-server-disk-space/","content":"I’ve been disturbed by having my services unavailable on my machine because of “no space left on device”. Every time I was forced to do some df -h / and du -h / commands and dig down to what leads to the lack of disk space.Today I again encountered this issue and I’m done with it. I decided to find out what has been swallowing my disk space.(make sure to sudo su first if you want to use du utility)I ran du -ch /var/lib/docker/containers/*/*-json.log, and I got an interesting result:Holy crap. That’s a log file of 13 gigabytes. I then moved to Google on how to clear Docker logs because there’s no official implementation of so. The fastest and cleanest way is sudo sh -c &#39;truncate -s 0 /var/lib/docker/containers/*/*-json.log&#39;, from this StackOverflow post.Problem solved. The next thing is how do I prevent this from happening again in the future? And under the previous linked Stackoverflow answer, here’s a quick answer to my next question: Rotate the log periodically.Create /etc/logrotate.d/docker-logs, and add the following to the file:And if everything is fine, logrotate.d will do the jobs."},{"title":"用 Docker 架設 Ghost 部落格系統：從 Ghost(Pro) 遷回自己的主機","date":"2018-03-13T05:21:54.000Z","url":"/migrate-from-ghost-pro-to-self-hosted/","content":"前幾天 Ghost(Pro) 又開始催繳了，付款畫面上沒寫多少錢，發了封郵件問了一下結賬金額是多少。不問不知道，一問不得了，一年居然要 $96！當下看到這個數字我嚇到吃手手，想了一下還是遷回自己的主機比較實在，便宜又好管理。下面將記錄我遷回來的過程。拿回部落格檔案首先，進入舊的 Ghost 後台，選擇左側的 Labs，接著按下 Export your content 旁的按鈕，即可取回部落格的所有檔案（除了媒體、主題檔案）。點選左側的 Design，然後將你要保留的主題下載回來。寫信至 Ghost(Pro) 客服中心，要求取回 image files。客服會打包成 .zip 丟到 Dropbox 然後給你連結。（先不用下載回來）前言以下將使用 jwilder/nginx-proxy 與 JrCs/docker-letsencrypt-nginx-proxy-companion 來自動設定 nginx 反向代理伺服器與向 letsencrypt 請求免費 SSL 證書並自動套用。當然並不會這麼麻煩，我用了 evertramos/docker-compose-letsencrypt-nginx-proxy-companion 來自動設定 nginx-proxy 與 docker-letsencrypt-nginx-proxy-companion，所以一切都將變得很簡單（根本是繞口令）。2018/8/22 更新：強烈建議使用 Traefik 而不是以上的套件順帶一提，我的伺服器環境是 CentOS 7，Docker Server 版本為 17.12.1-ce。事前準備伺服器要有下列東西：gitwgetunzip與 docker 跟 docker-compose，用下面指令安裝：首先，ssh 進你的伺服器，然後跑下面指令：接著根據需求修改 .env，我個人修改了 NGINX_FILES_PATH 以及將最下方這幾行 uncomment：修改完畢之後執行下列指令即可啟動 nginx：設定 Ghost接著，在別的地方建立一個 docker-compose.yml：以及一個 .env 檔案：接著打開 Ghost(Pro) 客服給的照片檔案壓縮檔 Dropbox 網址，在「直接下載」上按下右鍵，然後複製連結網址。這樣媒體檔案遷移就完成了！接著就可以啟動 Ghost 了：剛啟動會噴出一大堆超級多錯誤，不過都不用管它，理論上不會有問題。接著進入後台（ ）依照指示設定部落格。匯入設定與主題、後續處理這個其實也沒什麼好說的，原來匯出的地方都有匯入的選項，直接匯入即可。另外要移除一個多出來的預設使用者，然後 Tags 也會多出一個。手動移除即可。"},{"title":"在 CentOS 7 上使用 ArchiSteamFarm（ASF）達成 Steam 自動掛卡","date":"2018-02-05T21:07:18.000Z","url":"/install-archisteamfarm-on-centos-7/","content":"第一步：安裝 .NET 環境、tmux以下指令來自 記得進你的 shell startup script 把 $HOME/.dotnet 加到 PATH 裡。這邊提醒一下，建議用 tmux 或 screen 之類的套件讓 ASF 跑在後台，這樣就可以真正無人值守掛卡啦！第二步：下載、解壓縮 ASF這一步很重要，我卡了很久。試了半天才發現要用 ASF-generic.zip。接下來去  複製 ASF-generic.zip 的下載網址，現在最新版的是 ，找到之後就下載、解壓縮到機器上啦：第三步：設定這邊我就不再贅述，每個平台都一樣，請參考官方 wiki 或網上教學，有網頁版的設定檔產生器很方便第四步：啟動 ASF這邊提醒一下，建議用 tmux 或 screen 之類的套件讓 ASF 跑在後台，這樣就可以真正無人值守掛卡啦！"},{"title":"第一次用 Docker 自架 v2ray + shadowsocks 翻牆伺服器就上手","date":"2017-11-10T11:12:24.000Z","url":"/use-docker-to-deploy-vmess-and-ss-using-docker/","content":"How It Works我們接下來將使用 v2ray 架設使用 VMess 與 ShadowSocks 協議翻墻的伺服器。我們主要將使用 VMess 進行翻墻，ShadowSocks 僅作為備用。VMess 部分我們將將流量偽裝成正常的 https 流量並使用 WebSocket 進行與 nginx-proxy 的通訊，由 nginx-proxy 進行 reverse proxying，SSL 憑證由 jrcs/letsencrypt-nginx-proxy-companion 自動向 Let’s Encrypt 申請並套用。ShadowSocks 部分則使用原版協定，且不使用混淆參數。（v2ray 目前尚未實作這些部分，希望未來可以看到）Update: 目前還是推薦使用純 shadowsocks，使用 chacha20-ietf-poly1305（或 xchacha20-ietf-poly1305）、origin 協定、混淆使用 simple_obfs_http本文示範環境使用系統為 CentOS 7，採用 Google Cloud Platform 日本機房。我將假設 v2ray 資料夾位於 ~/v2ray，以下的檔案都將放置於此。$ docker version:前備條件Docker:docker-compose:下載/建立所需資料夾與檔案：另外，請將防火墻設定為允許下列規則的 ingress traffic（tcp/udp 都要）：nginx: 80, 443ShadowSocks: 19477, 19478撰寫 v2ray 設定檔config.json:將 xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 換為一個隨機的 UUID，你可以在這裡產生一個：將 [SOME_SECURE_PASSWORD] 換為 ShadowSocks 的連線密碼，盡量超過 16 個字元。設定 docker-compose 以快速部署docker-compose.yml:將 v2ray.example.com 換為你的網域名稱將 `michael@example.com` 換為你的 email，接收憑證過期提醒用，不需認證新增 nginx virtual host 設定檔在 ~/v2ray/nginx/vhost.d/ 下建立名為 你的網域名稱_location 的檔案部署這會啟動 v2ray 並開始輸出日誌（按 Ctrl+C 退出）。設定 v2ray client到  尋找一個喜歡的 client，下載並安裝進入 server 設定畫面，填寫你伺服器的 IP address，port 為 443User ID 或 UUID 請填寫你修改的 UUIDalterId 請修改為 9487加密方式選擇 aes-128-cfb傳輸協定使用 WebSocket，path 指定為 /設定 ShadowSocks client在 Google 尋找一個喜歡的 ShadowSocks client，下載並安裝進入 server 設定畫面，填寫你伺服器的 IP address，port 為 19477 或 19478，隨便挑一個Password 填寫你指定的密碼加密方式選擇 aes-256-cfb傳輸協定與混淆（Protocol 與 Obfs） 選擇 origin 與 plain，兩個 Param 都不填UDP 可開啟結語這樣應該就沒問題了，至於 v2ray 那邊有自動切換 port 的部分我還沒測試，以上設定檔是使用  產生的設定檔進行修改的，應該沒什麼大問題，還請協助測試。"},{"title":"解決 apt-get dist-upgrade 並 reboot 之後 Docker daemon 無法啟動的問題","date":"2017-04-21T15:17:28.000Z","url":"/docker-aufs-solution/","content":"發現問題剛剛在更新自己的 Ubuntu Server 的時候遇到的問題。跑了 sudo apt-get dist-upgrade -y; reboot 之後，再跑 sudo service docker start 就失敗了。看了一下 sudo journalctl -u docker.service，跑出下面的 log：其中最重要的資訊就是 Error starting daemon: error initializing graphdriver: driver not supported，原來是 kernel 更新之後 aufs driver 消失了。由於第一次遇到這種狀況，google 了老半天、問了朋友才知道解法。解決問題接下來會重開機，開完之後再試試看應該就可以了假如又碰到 Error starting daemon: error initializing graphdriver: /var/lib/docker contains several valid graphdrivers: overlay2, aufs; Please cleanup or explicitly choose storage driver (-s &lt;DRIVER&gt;)，若你確定你 container 的資料都在 /var/lib/docker/aufs 內，可以移除 /var/lib/docker/overlay2 資料夾，再 launch daemon 一次應該就可以了！References"},{"title":"Google XSS game solutions","date":"2017-01-21T14:55:28.000Z","url":"/google-xss-game-solutions/","content":"這是 Google 推出的 XSS game，很久之前有看到沒有解，今天又看到解了一下，分享一下心得。網址： 1首先可以看到它把 X-XSS-Protection 關掉了，接著看到 level.py 的第 45 行：很明顯前面根本沒做 escape，直接丟一個傳統的 payload 就 ok 了：#Level 2index.html 第 30 行：一樣丟 &lt;script&gt;alert()&lt;/script&gt; 發現沒用，丟 &lt;img src=&quot;123&quot; onerror=alert()&gt; 就 ok 了。#Level 3這關有點討厭，不過只要插一個 single quote (&#39;) 之後大概就知道怎麼解啦 XDFull payload:#Level 4timer.html 第 21 行看起來就超可疑的丟 12345&#39;) 進去之後長這樣不過如果要在後面觸發 alert() 的話，前一個 function call 就必須要關閉（startTimer），也就是說要有分號 ;。重點是插進去什麼都沒有，看了一下 hint，插入 %3B 之後就搞定啦Full payload:#Level 5看到 signup.html 第 15 行就覺得可疑，看一下後端的 python code 發現 Next 的網址是看 url 參數的。因此直接丟這個就搞定啦這邊的 trick 是 javascript:alert(1) 會被 browser 認定為執行這個 js code 哦#Level 6一開始以為是大魔王關卡，結果簡單到爆看一下題目寫說他會動態 load 這個 js 檔案，那我們就給他一個 data uri 就好了啊你以為我們真的要去自己 host 一個 js file 嗎Full payload"},{"title":"在 macOS Sierra 10.12.2 上編譯 Caffe 並使用 DIGITS","date":"2017-01-07T18:03:14.000Z","url":"/macos-sierra-10-12-2-build-caffe/","content":"Update: 目前推薦使用 Docker 環境的 DIGITS最近在玩 Machine learning，編譯 caffe 跟啟動 DIGITS 的時候遇到一些瓶頸，在這裡記錄下解決方案並分享給需要的人。過程中發生錯誤都可以在下面留言詢問喔！這邊因為我 training 的量比較少，我就沒有用 GPU，因此這篇不會教怎麼裝 n 卡的驅動程式，不過這邊有教學，在設定 Makefile.config 的時候也記得去掉 USE_CUDNN := 1 最前面的 #，這樣應該就可以了，其他部分跟本教學通用。homebrew install如果已經安裝過 homebrew 則可以跳過此步驟。dependency install首先要確認透過 homebrew 安裝的 Python 已經刪除：接著執行：執行 brew edit opencv，然後更改下面兩行：編譯並安裝 protobuf 2.6.1：然後編譯並安裝 boost：接下來執行：download caffe &amp; prepare deps然後我們要換一個 compiler，請登入  ，然後下載 Xcode Command Line Tools 7.3，接著安裝它，然後執行：Configure Makefile.config打開 Makefile.config，將 BLAS_INCLUDE 那行變更為：將 BLAS_LIB 那行變更為：將 PYTHON_INCLUDE 那行變更為：將 PYTHON_LIB 那行變更為：# WITH_PYTHON_LAYER := 1 變更為：WITH_PYTHON_LAYER := 1# USE_LEVELDB := 0 變更為：USE_LEVELDB := 0build caffe開始編譯！最後裝好一些 python dependency，然後就開始跑測試，測試過程中可能會有很多 Warning，不用理他。測試跑完之後，執行下列指令：make 好之後，執行以下指令讓你可以在 python 內 import caffe：verify build最後跑下面這行試試看，如果沒有輸出就代表安裝成功了！install &amp; launch DIGITS將下面這兩行塞到你的 .bashrc 或 .zshrc 等類似東西裡面去：重啟 shell，接著執行：接下來 vim ./digits-devserver 並把最後一行的開頭 python 改為 python2.7，然後跑下面這行：看到下面這樣就是啟動成功了！如果出現錯誤，先重複前面編譯並安裝 protobuf 2.6.1 的步驟試試，這邊一定要使用 2.6.1 版本，大於 3.0.0 的版本目前有 bug 無法搭配 DIGITS 使用。接著開啟  就會進入 DIGITS 首頁囉，大概長這樣：remember…最後再安裝回原本的 Command-Line-Tools：下載並安裝 Command_Line_Tools_macOS_10.12_for_Xcode_8.2.dmgFAQ1. 碰到下列狀況就是 numpy 版本不對或者衝突了：這時先重新安裝 numpy，然後看一下它裝去哪了：在 Location 那一行就是它的 lib 位置，這時打開 Makefile.config 找到 PYTHON_INCLUDE，把它的第二行 path 改成這邊顯示的位置。2. 出現 ImportError: No module named protobuf, fatal error &#39;numpy/arrayobject.h&#39; file not found執行下面兩行即可解決references"},{"title":"Windows Subsystem for Linux (WSL) 安裝教學 & 初體驗","date":"2016-08-10T21:48:45.000Z","url":"/bash_on_windows_installation/","content":"八月二日時微軟釋出了 Windows 10 年度更新版（組建 14393），其中已經添加了流傳已久的 Bash for Windows（其實組建 14316 就有了）。小弟早就迫不及待想嘗試一下了，在這裡寫個教學記錄一下。首先你要知道：這不是虛擬機器，也不是容器，也不是專門為 Windows 編譯的 Linux binary（像是 cygwin）。^1你可以想象它是 Wine 的相反——Ubuntu 的 binaries 在 Windows 上原生實作。Ubuntu 官方提到^2：A team of sharp developers at Microsoft has been hard at work adapting some Microsoft research technology to basically perform real time translation of Linux syscalls into Windows OS syscalls.Requirements^3電腦執行 Windows 10 Build 14316 以上版本在這裡升級： 的處理器以及 Windows必須使用 AMD 或 Intel 的 x64 相容 CPU已加入 Windows 測試人員計劃Prepare啓用開發人員模式首先，請打開 Windows 的設定應用程式，你可以在開始選單的左下角第二個圖示找到它。其次，請點選更新與安全性，然後點選左方選單的開發人員專用：接著，點選開發人員模式，然後點選是：啟用 Windows subsystem for Linux (Beta) 方法一請按下 Win + X，然後選擇命令提示字元。接著鍵入 OptionalFeatures 並且按下 Enter。將列表拉到最底部，將適用於 Linux 的 Windows 子系統 (搶先版 (Beta)) 的核取方塊打勾，並且點選確定。待其處理完畢後，請儲存你的資料以及此網頁連結，然後重新開機。啟用 Windows subsystem for Linux (Beta) 方法二請按下 Win + X，然後選擇命令提示字元（系統管理員）。接著逐行執行以下指令^4。安裝 Windows subsystem for Linux (Beta)Windows 要求重新開機時，請重新開機，因為 Windows subsystem for Linux 的某些底層需求只有在 Windows 啟動時才能載入。[^5]重新開機完成之後，請按下 Win + X，然後打開命令提示字元。如果你要使用預設的設定，請執行 lxrun /install /y，這會同意使用者條款、安裝子系統並且設定使用者名稱為 root，密碼為空。然後請跳到下一個部分繼續閱讀（推薦）如果你要手動設定，請執行 bash，閱讀條款之後輸入 y 以繼續。資料處理完成之後，請設定 UNIX 使用者名稱及密碼，要注意這裡的使用者名稱及密碼跟 Windows 的那對完全沒有關係。[^6]如果你選擇使用者名稱為 root，密碼就不需要設定。技巧、注意事項如果以後要打開 Ubuntu on Windows，執行 bash。可以我看到一開始進去的 path 是 /mnt/c/Users/Birkhoff Lee，也就是說 Windows 有把你的使用者目錄（C:/Users/使用者名稱）掛載進去。往上層目錄看，原來它是把所有硬碟的檔案系統直接以==可讀可寫==的權限掛載進去，所以請不要在裡面執行 rm -rf /mnt/C/* 之類的東西，不然會爆炸，以下誠招勇者嘗試root 使用者的檔案目錄可以在 Windows Explorer 下面找到，path: C:\\Users\\使用者名稱\\AppData\\Local\\lxss\\rootfsDocker 目前在上面跑不了，該 issue 討論串連結：本篇教學安裝到的 Ubuntu 版本是 14.04.4 LTS。這目前只是測試版，不是所有東西都能 work。解除安裝：執行 lxrun /uninstall /full /y請在  回報問題每個使用者的 Ubuntu on Windows 都是獨一的在 Windows 下跑 bash -c &quot;指令&quot; 可以直接執行 bash 指令FAQ 連結：[^5]: : It is important that you DO reboot when prompted as some of the infrastructure which Bash on Windows requires can only be loaded during Windows’ boot-up sequence.[^6]: "},{"title":"赫布學習法 ─ The Hebb's Rule","date":"2016-07-28T13:14:55.000Z","url":"/the-hebbs-rule/","content":"大家好這裡是非常久沒出文章的 lemo，抱著贖罪的感情來寫文章。讓我們來看看今天的主角 Hebb’s Rule ，以下是 Hebb’s Rule 的完整定義。Let us assume that the persistence or repetition of a reverberatory activity (or “trace”) tends to induce lasting cellular changes that add to its stability… When an axon of cell A is near enough to excite a cell B and repeatedly or persistently takes part in firing it, some growth process or metabolic change takes place in one or both cells such that A’s efficiency, as one of the cells firing B, is increased. – Hebb意思大致為若 A 和 B 之間夠近足以互相刺激，並且反覆刺激，則 A 和 B 之間的傳遞效能就會增加。上圖為這次用來分析的類神經網路(抱歉圖可能畫的不好看,第一次用Graphviz畫。),而根據這個架構來看,A 和 B 傳遞效能增加的部份為Weight,所以根據Hebb’s Rule來說,我們可以定義一個公式來更新Weight:然而我們為了能夠讓它達到我們的預期目標,我們將兩個訊號(χ)改成預期輸入(ρ)輸出(t)組,我會將輸入、輸出、權重(Weight)以矩陣表示。得公式: W = ρ×t這種算法雖然還是不如預期,但在輸入的P與預期輸入正交時,產出的就是預期輸出,原因是兩矩陣正交。偷偷告訴你這種可能性很小,為了取代這種方法,我們必須重線性代數拿出一向工具,它叫偽逆矩陣(Pseudo inverse)連結在這偽逆矩陣特性(A*是偽逆矩陣):公式為: A* = A(轉置)/(A(轉置)×A)我們可以用上面的方法,帶入預期輸入ρ求出其偽逆矩陣,再與預期輸出相乘後得一權重矩陣(weight),便可配置在你的類神經網路內喔~如果看不懂可以寄信問我email,抱歉這次寫得很爛QQ對了這一系列主要以探討算法,不會寫到code喔~"},{"title":"在 OS X 上攔截 Genymotion 模擬器的所有 http/https 封包","date":"2016-07-22T13:54:36.000Z","url":"/capture-genymotion-https-package-osx/","content":"OWASP ZAP 是一套開源且免費的滲透安全測試軟體，由非常多的志工打造而成，適合開發者或安全測試人員使用。要抓 Genymotion 模擬出的 Android device 的 http/https 封包時就非常適合用它。EnvironmentOS X 10.11.5OWASP ZAP 2.5.0Genymotion 2.7.2Emulated Android 5.0.0Step 1打開 OWASP ZAP，在彈出的「Do you want to persist the ZAP Session」對話框中選擇第一個選項並按「Start」。Step 2打開「Tools」&gt;「Options」，然後點選「Save」，並且將憑證檔案儲存到桌面上。Step 3進入 Genymotion，啟動你的 Android device，將你的憑證檔案直接拖到模擬器 player 視窗內。Step 4進入「Settings」&gt;「Security」，點選「Install from SD card」然後進入「Internal storage」&gt;「Download」並點選你的憑證檔案。Step 5OWASP ZAP 預設會監聽 localhost:8080，我們需要將所有網絡流量丟給 OWASP ZAP 處理，所以需要在 Wi-Fi 選項中設定 proxy 代理。進入「Settings」&gt;「Wi-Fi」，按住「WiredSSID」然後點選「Modify Network」，將「Advanced options」打勾，將「Proxy」選項設定為「Manual」。請將出現的設定依下列填入：Proxy hostname: 10.0.3.2Proxy port: 8080然後按下「SAVE」就完成了！最終的設定會像下圖：其中的 10.0.3.2 是 Genymotion 中的一個固定 ipv4 位置，專門用來指向執行 Genymotion 的主機。Step 6接下來，所有的 http(s) 流量會全部在 OWASP ZAP 中出現，如下圖："},{"title":"Telegram 中文化教學","date":"2016-06-21T09:51:31.000Z","url":"/telegram-to-chinese/","content":"近期風靡的 Telegram 並沒有支援正體中文語系，若你需要將其更換為中文，可以參考以下教學！iOS請打開 Telegram 中文化頻道，並點選下載最新的「iPhoneTW.strings」檔案。待下載完成後，請再次點選該檔案。此時會跳出一個選單，請點選「Apply localization file」選項以套用語系檔案。Android請打開 Telegram 中文化頻道，並點選下載最新的「AndroidTW.strings」檔案。待下載完成後，請點擊該檔案右上角之「…」圖樣，並點選「Apply localization file」選項以套用語系檔案。進入「語言」設定畫面後，點選「正體中文」選項，即可套用正體中文語系檔案。Desktop請打開 Telegram 中文化頻道，並點選下載最新的「DesktopTW.strings」檔案。第一種做法請進入「Settings」，按下「Shift」+「Alt」（或是「Option」）並點選「Change language」選項（如圖所示），此時請選擇您剛剛下載好的語系檔案。第二種做法同樣是進入「Settings」，請直接鍵盤依序按下「loadlang」，便可進行語系檔案的選擇，此時請選擇您剛剛下載好的語系檔案。macOS native請打開 Telegram 中文化頻道，並點選下載最新的「OSX_TW.strings」檔案。打開 Telegram 後，請右鍵點擊 Telegram 圖示，並依序點入：「選項」 &gt; 「顯示於 Finder」。接著會跳出一個資料夾，裡面有一個 Telegram 圖示。請右鍵點擊該圖示，並點擊「顯示套件內容」。此時，請關閉 Telegram 應用程式。關閉後，請依序進入：「Contents」 &gt; 「Resources」資料夾。接著，請右鍵視窗，並點擊「新增檔案夾」，並將其命名為「zh_TW.lproj」。請將剛剛下載好的語系檔案拖入「zh_TW.lproj」中，並輕點一下「zh_TW」部分。等待一秒後，名稱會變成輸入框形態，請將其變更為「Localizable」。此時，語系檔案名稱應為「Localizable.strings」，「L」要大寫。現在開啟 Telegram 應用程式，此時應已更換為正體中文語系。"},{"title":"Plastc Card 智慧型卡片介紹 & 購買流程記錄","date":"2016-05-28T10:38:11.000Z","url":"/plastc-card/","content":"其實 Plastc 這個東西我在前幾年就聽過了，這是一個「智慧型」的卡片。這幾天是 Plastc 公司的優惠促銷期間，剛好趁機下手。規格付款技術可覆寫的磁條可覆寫的 NFC 模組可覆寫的 EMV 模組E-ink 觸控式螢幕3.1”312 x 74 像素Bi-stable 顯示技術觸控感應器充電Plastc 專用充電器低耗能藍牙模組靈活且可充電的電池（約三十日才需充電一次）快閃記憶體（可以儲存超過 20 張卡片資訊）與普通的 ATM Card 完全一樣的大小、厚度透過以上數據可以看出 Plastc Card 真的是短小精悍啊！而且它支援的付款技術十分多樣，我們不僅可以使用它進行平常的付款、刷卡，甚至可以插入 ATM 操作喔！充電器前面有提到，Plastc Card 是使用無線充電進行充電的喔！讓我們瞧瞧它的無線充電器吧！真有質感（流口水預購的好處Plastc Card 到目前為止都還是預購階段（pre-order）喔！預購階段相較於以後的銷售模式有這些特點：預購階段優惠售價 155 美元（原價：180 美元）Plastc 服務訂閱終身免費（原價：50 美元/月）長達兩年的保固期 (Additional year of coverage)送專用充電器讀卡機（用來添加卡片到 Plastc 中）介紹短片&lt;video src= width=”100%” controls&gt;購買記錄優惠5/27 ~ 5/30 是 Plastc 公司為了紀念美國聯邦國定假日 Memorial Day 而進行促銷的活動期間，即買 Plastc Card 現折 40 美元！Plastc 公司有邀請購買制：使用者購買後可以分享自己的優惠碼給朋友，然後朋友通過該邀請碼／邀請連結就可以享受到 20 美元的優惠了！也就是說，我省了 60 美元，依照現在的匯率算也就是將近 2000 台幣！如果你也想要享受邀請碼的優惠，歡迎使用這個連結進行購買：截圖透過邀請連結進入的購買畫面（Memorial Day 活動期間）。這裡你需要填寫購買人的 e-mail、寄送地址、優惠碼等。要注意的是，國際運費需要 $10 美元喔！填寫完一些寄送資料之後，進入到了付款資料填寫的畫面（只支援信用卡付款）點下「Complete Order」，重定向到了這個畫面：購買成功！同時，Plastc 會向前面填寫的 e-mail 地址發送一封收據：注意事項Plastc Card 未成年也可以使用唷！還有，任何使用者在使用前都要先跟 Plastc 公司進行身份驗證，可以使用以下方式進行認證：社會安全編號（好像是美國的東西）護照駕照需要注意的是，你添加到 Plastc Card 的卡片的持卡人姓名必須要與你證件上的名字一樣喔，不然是無法加入的！"},{"title":"輕鬆理解 public key cryptography ─ 公開金鑰加密演算法","date":"2016-05-27T13:00:17.000Z","url":"/public-key-cryptography/","content":"今天抽空看了一下放在 browser bookmark 裡面很久了的一個 youtube 影片，裡面用很易懂的方式解釋了 public key cryptography 的工作原理。不過最終還是有提到 modular arithmetic（模算術），於是去 Wikipedia 了解了一下並與朋友交流了一下，以下是整理出來的筆記要理解 public key cryptography，有個前置技能要先點好，叫做 Modular ArithmeticModular ArithmeticModular Arithmetic 就是俗稱的「模算術」、「模運算」。設正整數 a, b, n 且滿足 (a - b) / n 為正整數，則有：a ≡ b (mod n)，即 a % n = b簡言之，正整數 a, b 之差的絕對值為正整數 n 的倍數。如果 n 為一極大質數（如上百萬位），則這個過程是幾乎無法逆運算回去的（即通過 b 與 n 逆算出 a）。Public Key Cryptography終於到正題了！如果你沒有理解上個小節的內容，你可以參閱 下面我要開始講故事囉！從前從前，在忠孝國中的三年四班，有個小男孩叫做小明，有個正妹叫做小美，還有個八卦男叫做小強。小明的位置在小強前面，小美坐在小強後面，簡單來說，他們在班上的座位是這樣的：小明 ─── 小強 ─── 小美今天上課時，小明要傳一封充滿甜言蜜語的小紙條給小美，要讓小強傳給小美，但是不想讓小強看到內容，該怎麼辦呢？這時，小明先傳一張紙條給小美，內容是這樣的：g = 3p = 17數學不好的小強打開來看，不知所云，還是傳給了小美。接著，小明偷偷地記下了一個他自己隨機想好的數字，他選擇了 15。於是，結合第一張紙條的內容，他算出了 (3 ^ 15) % 17 的結果──6，他把 6 寫在了小紙條上，然後讓小強傳給小美。數學不好的小強打開來看，還是不知所云，仍然傳給了小美。接著，小美記下了小明給他的 6 這個數字，然後也做了跟小明一樣的事情，這裡她選擇了 13。接著，她用第一張紙條預先約定好的 g ── 這裡是 3，與預先約定好的 p ── 這裡是 17，計算出 (3 ^ 13) % 17 的結果──這裡的結果是 12，她把 12 寫在小紙條上，透過小強傳給了小明。於是，除了第一張紙條外，三個人目前分別有這些數字（假設小強有記下這些數字）：小明：15：自己放在心裡，沒有別人知道的隨機數字12：剛剛小美傳給他的數字小強：6：小明計算後傳給小美的數字12：剛剛小美計算後傳給小明的數字小美：13：自己放在心裡，沒有別人知道的隨機數字6：小明傳給她的數字接著，精髓部分來了！小明這時將剛剛小美傳給他的數字 12 與自己的秘密數字 15 進行指數運算，即 12 ^ 15，再進行 % 17 的運算，也就是他計算出了這個式子：(12 ^ 15) % 17，這裡的結果是 10。小美這時也將剛剛小明傳給他的數字 6 與自己的秘密數字 15 進行指數運算，即 6 ^ 13，再進行 % 17 的運算，也就是他計算出了這個式子：(6 ^ 13) % 17，==這裡的結果也是 10！！==我們把運算過程整個列出來：若要將其轉化為公式：設小明的秘密數字為 x，小美的秘密數字為 y，可以得到：(g ^ x mod p) ^ y mod P = g ^ x ^ y mod p = (g ^ y mod p) ^ x mod p = key但是，因為雙方在通訊過程中根本沒有提到他們的秘密數字，因此小強根本就不知道 10 這個數字！不過，如果小強得到了兩個秘密數字中的其中任意一個，那小強就可以破譯他們往後的加密通訊內容了！也就是說，現在兩人都有一個共享的金鑰，也就是我們今天的主題：public key cryptography 中的 public key！因此，兩人之間的訊息可以透過現在小強不知道的 public key 10 進行一系列的加密演算進行加密！你可能會想問：上面的運算都很簡單阿，那如果小強的數學好一點，這些計算豈不都白費了嗎？沒錯。在上一小節我有提到──「如果 n 為一極大質數（如上百萬位），則這個過程是幾乎無法逆運算回去的（即通過 b 與 n 逆算出 a）。」也就是說，當這裡的 p 今天是一個極大質數，那麼這個過程就很難逆運算回去！"},{"title":"從過時的 LINE 轉移到 Telegram","date":"2016-05-12T13:57:42.000Z","url":"/move-to-telegram-from-line/","content":"這幾年 LINE 在臺灣可說是十分風靡，但如今，LINE 的設計變得越來越複雜，十分的難用、而且安全性並不高。可能你不會對自己的聊天軟體要求很高的安全性，但是你應該還是不太想被人家看到聊天記錄，而且想使用有更多更實用的功能吧？Telegram 介紹Telegram Messenger LLP 是獨立的非營利公司，其設立在柏林，且由 Nikolai Durov 以及 Pavel Durov ── 俄羅斯最大的社交網站 VKontakte 的創始人 ── 所設立！Telegram Messenger LLP 使用了 Nikolai Durov 專門為其研發的 MTProto 通訊協定作為整個軟體對伺服器的通訊基礎！Telegram 跟 LINE 的幾項大對比：LINE 不支援 bot API，即聊天機器人（最近剛開始支援，不過功能也不夠多元）LINE 安全性不高，反觀 Telegram，連恐怖組織 ISIS 都指定用它做通訊Telegram 官方承諾所有功能都永遠不需要付費，包含永久免費的貼圖系列：此處貼圖因全由使用者上傳，而永久免費。Telegram 訊息傳送、APP 執行速度超快。Telegram 支援各種平台，包括：Android、iOS、OS X、Windows/Linux 版、網頁版 以及 Windows Phone 版本等Telegram 可以針對單一條訊息回覆，還可以轉發單一或多條訊息。光是前者就能省下超多時間了！Telegram 可以 「@」（標註）使用者！LINE 只有群組，反觀 Telegram 還有「頻道」及更多種群組種類Telegram 絕大部分的技術都已經由官方開源出來了。你不覺得 LINE 的界面很複雜嗎，一大堆有的沒的。一個一個羅列出來倒是不太可能，因為真的差太多了！你有想象過在 Telegram 上看新聞、看天氣、找搞笑影音、調鬧鐘、管理 Docker 容器，甚至執行 bash、php、python、node.js、java 程式嗎？Telegram 的安全性Telegram 是經由專用的 MTProto 通訊協議 以對稱式 AES 加密演算法（256 bits）、RSA 加密演算法（2048 bits）與 Diffie–Hellman key exchange 為基礎與伺服器進行通訊的。這些可能說的太籠統，來看看官方多有信心：三年前 Telegram 剛剛起步的時候，Pavel Durov 宣佈只要有任何人成功破解已攔截的通話訊息，他願意提供 200,000 BTC 做為獎金！（依照當時匯率來看，約為 3,289,600,000 台幣）Telegram 分兩種聊天模式：一般聊天模式：使用用戶端對伺服器端的加密通訊，且可以經由多重裝置登入。秘密聊天模式：使用端對端（P2P）的加密通訊，且只能經由兩個特定裝置登入。官方宣稱，當兩名使用者進行通訊時，第三方（包含管理人員）皆無法存取使用者的通訊內容。當使用者在進行秘密聊天時，訊息包含多媒體皆可以被指定為「自解構」的訊息。當訊息被使用者閱讀之後，訊息在指定的時間內會自動銷毀。一旦訊息過期，訊息會在使用者的裝置上消失。註冊 Telegram 賬號這個並不難！只要你拿起你身邊的裝置，打開  ，就可以在上面找到你裝置的 Telegram 應用程式下載連結了！接著，你只要按照應用程式內的指示註冊即可，不需要輸入什麼電子郵件、密碼還是什麼換機密碼，通通不用！只要手機簡訊認證就可以了！註冊之後，請記得要在設定選單中設定你的使用者名稱（username），才能正常使用。開始使用 TelegramTelegram 與 LINE 的差別是非常大的，一下是小弟為各位整理的一些內容。如果有缺漏的部分，您也可以在下方留言區提醒小弟！好友首先，你要有一個認知：Telegram 的「好友」這個東西我們基本上不用它。你可以隨時向任何人建立對話，只要在搜尋方塊中輸入使用者的名字（或 username）就可以囉！群組Telegram 的群組稱為「Group」，也就是類似於 LINE 群組的東西。Telegram 的群組分為兩類：普通群組：與 LINE 的群組類似，且上限為 200 位使用者超級群組（Supergroup）優於普通群組的地方：使用者上限為 5,000 人訊息 PIN 功能，即置頂功能管理者可以刪除任何訊息可建立自定義的邀請加入連結可以看到加入群組之前的歷史聊天記錄頻道管理員可隨時將普通群組免費升級至超級群組，讓群組更加強大。官方詳細說明：頻道頻道是一個有些類似群組的東西，但是性質卻不太一樣。你可以這樣理解：使用者「訂閱」頻道，然後頻道管理者會以頻道的名字、大頭照在頻道內「廣播」訊息，但是使用者無法發言。而且，頻道是可以有無上限的訂閱人的！貼圖Telegram 的貼圖不像 LINE 那樣由官方製作或是審核，在 Telegram 上面的貼圖全部都是由使用者自行上傳提供給大眾免費使用的！如果你也想自己做一套貼圖，你可以與 @Stickers 進行操作！只要貼圖提交給他並符合技術規範，就可以立刻發佈貼圖，不需要 LINE 那樣的官方繁雜審核喔！bot 開發Telegram 有提供一系列方便的 API 給開發者使用，且官方有非常完整的 API 文件！而且，依靠社群的強大力量，光是 NPM 上就有超多的 Telegram bot 套件！目前來說， 算是還不錯的一個。結語Telegram 是個新興、實用、安全的聊天軟體，它比目前流行的 WhatsApp、Messenger 或 LINE 都要安全的多。而且開發團隊秉持著開放原始碼的精神，除了伺服器使用的是專有軟體外，其他幾乎都是 open source 的！而且，如果你會寫程式，開發聊天機器人真的就跟喝水一樣簡單！如果你有什麼問題，在  上搜尋幾乎都找得到解答及說明！如果你是開發人員，而你想知道 Telegram 的詳細技術資料，請參閱  。搭配服用Telegram 中文化教學從 Line 換到 Telegram：一個更好的通訊軟體！"},{"title":"XAPO bitcoin VISA Debit Card 開箱文","date":"2016-04-28T12:23:51.000Z","url":"/xapo-bitcoin-visa-debit-card/","content":"最近 bitcoin 正夯，除了給自己的 bitcoin wallet 裡面丟錢之外，當然要買張提款卡來過過癮囉！我個人使用的是 XAPO 公司的 bitcoin wallet，正好他們有提供購買 debit card，而且可以運送到台灣，於是就下手買了一張！這是官方的介紹頁面：首先，我要跟你講的是：貴到爆炸對沒錯，XAPO debit card 真的貴到爆炸！基本製卡費不談，光是 DHL 的國際運費就要一千多新台幣！這是官方的價格圖：各位大概有注意到 XAPO debit card 有分 EUR、GBP 以及 USD 卡版本，這裡我購買的是 USD 版本。因此，我大概付了這麼多錢：對！就是 0.17 BTC！75 USD！因此要下手的朋友們不妨多考慮一下，免得到時後悔。購買首先你需要一個 XAPO 賬號，賬號申請不用錢，也不需要證件護照戶口名簿，但是要驗證手機號碼喔接著他就會給你一個 bitcoin wallet，然後就有購買的按鈕了裡面都有寫的很清楚，請注意：付款是使用比特幣付款喔！如果朋友們不知道去哪裡買比特幣，你以為我要告訴你去哪裡買嗎？不！如果你不知道哪裡買，那你還買幹嘛？（x好啦，台灣的 BitoEX 公司就有提供全家便利商店購買了喔，具體購買方式，請自行 Google，這不在本文討論範圍內這是付款完成的畫面，激動 (≧▽≦)/運送購買的時候，有讓你選擇運送方式，共有兩種：常規運送：我也不知道這啥，反正他說最後會到你國家的本地郵局服務，然後有多次強調卡極有可能會不見，找不回來，你就需要再用下面的運送方式重買一遍（對，要重新付費），而且此方式沒有物流追蹤單號DHL 國際物流：對，沒錯，你一定聽過這家物流公司。運費貴到爆炸，比卡費還貴！不過有承諾 3~5 天內會送到，而且會給物流追蹤單號。如果你填錯地址，一定要打電話給 DHL，不然你的卡會被退回 MyChoice（發卡公司），然後你就拿不到卡了哭哭話說，我回到家的前一個小時還在臉書上抱怨過了六天了他還沒送到，結果到家之後發現已經躺在桌子上了你還是沒發現重點在哪裡嗎對，我還沒拿到物流追蹤單號我就拿到卡了開箱DHL 的包裝還蠻用心的（廢話，我給你那麼多錢（X有很方便超好撕的小..開口送來的時候長這樣好複雜的運送資料很方便超好撕的小開口，我撕的好直傳說中的 container (X唯一的內容物，頗有質感內容物中唯一的內容物，好神秘（？信封打開，有一張紙，紙上寫了開卡方式，以及使用的注意事項，右下角黏著卡，很好撕，不會破掉。卡上還貼著開卡方式，根本再三強調。雖然卡上那個貼紙叫你打國際電話開卡，但是其實在  註冊一下，開卡就好了，下面會提到開卡開完箱，來開卡吧，這是第一步！把卡激活。首先，你需要先登入 XAPO 網頁版應用程式（不可以使用手機版喔）接著，點進去最上方導航欄的 Wallet 按鈕，然後如果你買了卡的話，畫面上就會有個 debit card 的圖案，上面有個 ACTIVATE 的按鈕喔！點進去，他會叫你給他卡的最後 4 碼，以確認你有收到卡，然後點擊確認就可以囉。諷刺的是，如果你有注意，卡都還沒製作好但是 iOS XAPO APP 就有直接寫卡號最後四碼了XDDD不得不說，iOS 版的 XAPO 應用程式做的真的很爛，不知道 Android 的怎麼樣取得 card pin code填寫完最後 4 碼之後，點擊綠色的 VIEW PIN 按鈕：他會對你 XAPO 賬戶註冊的 email 發一個臨時密碼，用來驗證身份並取得 PIN Code這是發來的 email：回去剛剛的頁面，填進去，按下 VIEW PIN然後就會給你卡的 pin 了！是四位阿拉伯數字喔，要把它安全的保存起來，以後還是可以看，重複一樣的動作即可開卡第二步，在發卡銀行網站正式開卡（兩步都要做）上面有提到不用打國際電話，在 MyChoice 的網站上註冊一下就好了本文僅介紹在 mychoicecorporate.com 上的開卡過程，不介紹在新版網站（cardholderonline.com）上的開卡過程打開 首先，點擊網站右上角的 CARD HOLDER LOGIN 按鈕，進入登入畫面然後點擊 NEW USER 按鈕，會跑出開卡表格把卡號、CVV、你的生日填進去，按 Submit 即可完成開卡這裡有兩點要提醒大家：CVV 是卡片背後簽名欄最右邊的三碼阿拉伯數字你的生日必須滿十八歲，不然會顯示你的 email 跟 password 不匹配！（很神奇吧然後會叫你填入賬號資料然後就開好卡了，畫面會跳到這邊這是電子賬單喔OuO關於手續費需要注意的是，因為這是外國的卡，因此一定是有些手續費的就拿 USD 卡為例，如果你要在台灣的 ATM 用這張卡領台幣，你需要付 3% 的外幣轉換手續費、3.5 USD 的外國 ATM 提款手續費。更多詳情可以看這邊：因此，如果可以使用 bitcoin 進行交易，還是要多加使用傳統的 bitcoin wallet 之間的發送 btc 功能，畢竟 bitcoin 是去中心化的，手續費低了不少。使用方式因為 XAPO debit card 是 VISA 卡，所以支援全球所有可以刷 VISA 卡的地方喔！只要把它當一般的 VISA debit card 用就好囉！不過，XAPO debit card 不支援 Apple Pay，十分可惜。而且，因為它是 VISA 卡，一般網站上可以刷卡的地方都是可以使用的喔！而且，你還可以把它加到 PayPal 裡面呢！要注意的是，加完之後 PayPal 立刻刷了 1 USD，應該是在驗證卡是否可用的手段，畢竟沒辦法用一般的手段查詢餘額（？），然後 PayPal 確認之後就會退款給你囉！在 XAPO 的交易記錄上會顯示為 Status: Canceled，即交易取消。結語．注意事項XAPO debit card 本身是完全不需要提供身份證明文件之類的東西的喔！但是它本身有 spending limit，如果上傳完並審核通過這些政府核發的證件、水電費等的收據，就可以提升限度了喔！這個部分，第一張付款完成的圖就有寫到了。具體的部分，各位可以參考這邊： ，本文不再贅述在 ATM 提款的時候，ATM 可能會寫餘額為 0，這是正常的！一切的交易接受、拒絕都由 XAPO 決定，如果賬戶 btc 的餘額夠當然就會讓你交易囉如果各位還有問題，歡迎在下面留言、或者私訊我的臉書，或是去翻一下 XAPO 官方的 debit card FAQ 囉最後奉上漂亮的卡片正反圖片各一張4/30 更新：已確認 USD 版本卡片不支援 App Store 臺灣商店"},{"title":"Apple Pay 使用心得","date":"2016-04-22T09:01:32.000Z","url":"/apple-pay/","tags":["\n- apple\n- introduce\n- beta\n- pay"],"content":"前幾天看到有夥伴說中國區已經開放使用 Apple Pay 支付，於是想起我有一張銀聯卡，把它加入了我的 iPhone Wallet (即 Passbook，以下簡稱 Wallet)將銀聯卡加入 Wallet首先，將 iPhone 的 Region 設定為「中國」，接著主畫面應該就會出現 Wallet 了接著進入 Settings - Wallet &amp; Apple Pay - Add Credit or Debit Card然後照著你銀聯卡的資料填進去，然後用對岸的手機動態認證之後就加入完畢了這是建行的簡訊認證畫面：認證完成的畫面：然後可以在 iPhone 鎖定的情況下快速按兩下 home 鍵進入 Apple Pay然後就是最棒的 Touch ID 付款使用心得沒有任何心得，因為目前 Apple Pay with Union Pay 幾乎整個台灣沒人支援Orz不過有趣的是，所有的 7-eleven 都支援 Apple Pay 喔！刷的地方就在收銀機的一個框框（一體的），不過我不知道哪些卡可以用QQ7-11 的刷卡框框大概長這樣脖子斷掉抱歉，上傳上來就歪掉惹QQ好消息日前行政院長張善政已宣佈通過 Apple Pay 在台營運一案，相信今年年底應該就會有很多銀行開始支援 Apple Pay 了。"},{"title":"修復 Ubuntu 上 Sunpinyin 輸入法無法輸入 ue 音的問題","date":"2015-12-21T11:19:22.000Z","url":"/fix-sunpinyin/","content":"我個人習慣使用的輸入法是拼音，在 ubuntu 上之前一直無法使用 Sunpinyin 輸入 ue 的音，像是學、月、越等字，在網上查到了解決方案在這裏整理一下。Step 1下載最新的 Sunpinyin 安裝包：sunpinyin-data_0.1.22+20131212-1_amd64.deb，然後安裝Step 2安裝完成後，請重新啓動 Ubuntu：sudo rebootStep 3點擊右上方的 fcitx 圖樣，選擇 “設定“，彈出下圖視窗： 點擊下方的 ＋ 號，彈出如下的畫面： 選擇 Sunpinyin，點擊確定按鈕即可。 Step 4再次叫出該選單，選擇輸入法子選單，選擇 Sunpinyin 即可。"},{"title":"Let's Encrypt — 一個免費 · 自動 · 安全 · 開放 · 透明的 SSL 證書簽署單位","date":"2015-11-10T11:31:00.000Z","url":"/lets-encrypt-introduction/","content":"在如今這個網絡發達的時代，網絡交易、私人聊天、線上會議等涉及個人（或公司）隱私這些服務並不少見。但是如果這些隱私沒有加密，使用明文傳輸的話，很容易就會被不法人士竊取，造成使用者的損失。於是，各種服務（例如臉書、Outlook、Twitter、網絡銀行等）均開始推薦（或強制）使用 https 連線至主機。像這個部落格，也是強制全部使用 https 連線。但是 https 連線是需要 SSL Certificate （SSL 證書） 的。這些證書通常由 Symantec (前 VerSign), COMODO, GlobalSign 等 受信賴的證書簽署單位 (Certificate Authority) 所簽發的。且這些證書需要每年付費，且費用並不低。所以很多站長並不想付費購買證書，造成了資訊傳輸安全性的一大問題。現在 ISRG (Internet Security Research Group) 與 mozilla, akamai, cisco, identrust, facebook 等其他互聯網巨頭共同開設了 Let’s Encrypt 服務。口號是 免費，自動化，開放。 (free, automated, and open)。最吸引各位的當然就是其免費的證書簽發服務。 自動化是什麼？能吃嗎（X）。自動化代表：自動設定。什麼！？自動設定！？不可能吧？想必你一定是這樣想的。然而，事實就是如此。只要在你的主機上安裝 Let’s Encrypt 的設定套件，執行幾行指令，就會自動依據你主機的環境將其設定完成。（而且全過程非常快，而且免費）2015/12/5 更新：Let’s Encrypt 已於 12/3 開放公測，各位朋友均可使用。本站也已經更新使用 Let’s Encrypt 證書。Let’s Encrypt 的官方網站："},{"title":"類神經網路初探 基本架構與感知器","date":"2015-11-04T15:46:00.000Z","url":"/introducing-artificial-neural-network-1/","content":"大家好我是lemo,最近在研究類神經網路,雖然很雷…..回到正題,相信大家都聽過類神經網路。類神經網路是一種利用電腦來模仿生物神經網路的結構和功能的運算模型，它使用大量的相連人工神經元來模仿生物神經網路的能力，並且經過學習的過程，使得電腦能夠就像人類那樣具有推理能力。畢竟是模仿生物神經網路來的,那我就不得不先介紹神經細胞。神經細胞的構造如下:如圖,有樹突、細胞本體、軸突,三大部份。其樹突主要為接收訊號端,而軸突為送出訊號端,細胞本體則是主要作運算的地方。神經細胞就是由樹突和軸突互相擴張連結的,基本上連結跟智力成正比,然而你可能會想電腦跟人腦來比電腦不是運算的比較快,所以電腦比人腦聰明,但電腦可模擬的連結數不比人腦多 why? 其實電腦正名為計算機,顧名思義他就只能”計算”。而人腦可以作學習、辨識、思考…..等電腦不能作的事情,這是電腦望塵莫及的。說了這麼多想必大家都想知道如何模擬了,首先我們要學習的是感知器模型,如下圖:根據圖來看有n個輸入端,這些輸入端其實就是樹突,而輸出端就是軸突。然而這個模型中間有一個作總和的Σ和一個拿來作判斷輸出的函數φ（）,為了將模型寫成程式,我們必須將模型些作一個公式,公式如下:接下來我們要深入探討判斷函數,判斷函數大體上可以分為三種常用的：第一種這種判斷函數只有0、1兩種輸出。第二種這一種判斷函數可以讓v收束在±0.5之間。第三種第三種函數是一個曲線函數,此種函數之後普片地使用 有關此函數詳細: ()有了這些知識就可以作最基本的感知器,當然類神經網路沒有這麼簡單,假入有空我下一張會教類神經網路的架構。※最近超忙的,第一次出文鞭小力一點QAQ"},{"title":"Windows 10 Pro + Ubuntu 14.04.3 LTS 雙系統安裝（更新：修復 grub 教學）","date":"2015-10-21T09:57:00.000Z","url":"/windows-10-and-ubuntu-14_04_3-lts-dual-boot/","content":"相信大家都聽過 Ubuntu 吧，Based on Linux但是可能大家的工作是離不開 Windows 的，或是娛樂方面的需求。像我一樣，我有時候也會玩一會遊戲當打發時間用，而且我現在的學校的英語作業有時候要在 IE 上面做，所以就必須裝雙系統囉。但是這可不是一件輕鬆的事情（對我來說 XD），在過程中遇到各種困難，下面就分享一下這雙系統的安裝過程吧！RequirementWindows 10 Pro 官方 ISO 檔下載教學： 14.04.3 LTS 下載連結：請將這兩個 ISO 檔案變成可供開機的 CD 或者 USB 隨身碟（此處不再贅述，網上均有教學）Installation這裡就不丟 Screenshot 了，最近真的沒時間再重新弄一次再拍。等下次我重灌的時候再補上吧 QAQ首先，你要備份好你的資料，不然後悔可是來不及啊（像我之前把一個還沒丟到 git 上的專案不小心整個資料夾刪除惹 超痛苦 QAQ），並且請備份到外部裝置（建議隨身硬碟）Step 1關機（幹 廢話嗎Step 2進入 BIOS 設定 Boot Mode （通常有 Leagcy 跟 UEFI 兩個選項），此處請設定為 UEFI，並且請關閉 Secure Boot。Step 3插入 Windows 10 安裝媒體，以其開機，執行安裝程式，此處沒有什麼需要特別注意的。把整個硬碟格式化重新分區就好，也不用特別為 Ubuntu 留空間（我這裡使用的是約 C: 250 GB, D: 750 GB），我們等一下會使用 D 槽的空間來執行 Ubuntu Installation.Step 4 — the most important進入 Windows 10，右擊右下角的電源圖示，進入 電源選項。點擊右側的 喚醒時需要密碼點擊 變更目前無法使用的設定取消選取 開啟快速啟動（建議選項）關閉快速啟動的原因是，快速啟動所使用的技術會影響 Grub 開機引導程式而無法進入 Ubuntu.點擊最下方的儲存變更。Step 5好了，我們已經設定好該死的 Windows 10 了，接下來就安裝 Ubuntu 14.04.3 LTS 吧/此時，插入 Ubuntu 安裝媒體，選擇 Try Ubuntu without installing。如果 WiFi 可用，請連結 WiFi。否則請插上網絡線。（這裡我是沒有 WiFi Driver 可用，對應我網卡的型號，我插上了網絡線並執行了 sudo apt-get install bcmwl-kernel-source）打開桌面上的安裝程式。你可以接下來就照著他做，不過在選擇安裝類型的時候，請選擇 與 Windows Boot Manager 共存 的選項。記住：每一步都要小心 (ゝ∀･)安裝完成後，他會問你要重新啟動電腦或繼續 Try Ubuntu，選擇重新開機，會直接進入安裝好的 Ubuntu。建議現在就安裝好必要的 Driver。Step 6此時，點擊右上角的圖示，點擊關機。 打開電腦，你會發現：電腦居然直接無視 Ubuntu 而直接啟動了 Windows 10！（如果這次 GRUB 的選單有出現，下一次開機可能就沒這麼幸運惹）Step 7來搞定這霸道的 Windows 10 吧。 進入 Windows，按下 Win + X ，點擊命令提示字元（系統管理員）。 接下來，請執行下面這行指令： bcdedit /set {bootmgr} path EFIubuntugrubx64.efi 此時 Windows 會將開機程式換成 GRUB。 重開機，就發現 GRUB 回來了，可以啟動 Ubuntu 了！Fix GRUB(22 December 2015 更新)有時候可能 Windows 更新，或是不小心動到了什麼，grub 可能不會在開機的時候出現而直接啓動 Windows。例如不久前 Microsoft 推送的 Windows 10 Threshold 2 更新包，我更新完後就出現了上述的情況。 此時，請嘗試重複操作上方的 Step 7，一般就可以修復 GRUB 消失的情形囉！References:"}]