<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Birkhoff&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.birkhoff.me/"/>
  <updated>2020-02-20T13:04:37.064Z</updated>
  <id>https://blog.birkhoff.me/</id>
  
  <author>
    <name>Birkhoff Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Changing default gateway in Unifi Security Gateway (USG)</title>
    <link href="https://blog.birkhoff.me/Changing-default-gateway-in-Unifi-Security-Gateway-USG/"/>
    <id>https://blog.birkhoff.me/Changing-default-gateway-in-Unifi-Security-Gateway-USG/</id>
    <published>2019-06-11T23:38:40.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>I’ve recently replaced my home network hardware with the Unifi family, and I’ve been satisified about them.</p><p>I live in China, and I have a Linux box that runs transparent proxy. I need to change the DHCP default gateway to something else, but it was nowhere found in the GUI. After some searching I have the solution here. First SSH into your USG, and do the following:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure</span><br><span class="line">show service dhcp-server shared-network-name <span class="comment"># check your network name</span></span><br><span class="line"><span class="built_in">set</span> service dhcp-server shared-network-name NETWORK_NAME_HERE subnet YOUR_SUBNET_HERE default-router NEW_GATEWAT_IP</span><br><span class="line">delete service dhcp-server shared-network-name NETWORK_NAME_HERE subnet YOUR_SUBNET_HERE dns-server ORIGINAL_DNS_IP</span><br><span class="line"><span class="built_in">set</span> service dhcp-server shared-network-name NETWORK_NAME_HERE subnet YOUR_SUBNET_HERE dns-server NEW_DNS_IP</span><br><span class="line">commit</span><br><span class="line">save</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>Remember to follow <a href="https://help.ubnt.com/hc/en-us/articles/215458888-UniFi-USG-Advanced-Configuration" target="_blank" rel="noopener">this</a> to make the config persistant.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;I’ve recently replaced my home network hardware with the Unifi family, and I’ve been satisified about them.&lt;/p&gt;&lt;p&gt;I live
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Solution to Battlefield V keeping crashing on Win10</title>
    <link href="https://blog.birkhoff.me/Solution-to-Battlefield-V-keeping-crashing-on-Win10/"/>
    <id>https://blog.birkhoff.me/Solution-to-Battlefield-V-keeping-crashing-on-Win10/</id>
    <published>2019-05-02T12:35:02.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>Today I wanted to play BFV and upon launching it just crashes without any error message. My environment:</p><ul><li>i7-7700k, overclocked to 4.8 GHz</li><li>2 * 8 GiB 3200 MHz RAM</li><li>NVIDIA RTX 2080 overclocked</li><li>240 Hz monitor</li><li>DX12, DXR on, FFR off</li></ul><p>I fixed it by doing the followings:</p><ul><li>When playing BFV, make sure you do NOT overclock your GPU. You can still use Afterburner and RTSS as long as you set the application detection level to high in RTSS, otherwise the game will crash.</li><li>Go to <code>bfv.exe</code> and go to the Properties > Compatibility, check <code>Disable full screen optimizations</code> and click on <code>Change high DPI settings</code>. Check the box that says “Override high DPI scaling behavior. Scaling performed by”. Select “Application” in the drop down box. Click ok.</li><li>On my machine, after some point it runs out of memory when in-game, it also causes stuttering. Use <a href="https://www.wagnardsoft.com/content/intelligent-standby-list-cleaner-v1000-released" title="Intelligent standby list cleaner" target="_blank" rel="noopener">https://www.wagnardsoft.com/content/intelligent-standby-list-cleaner-v1000-released</a> to solve it. This is a known Windows issue.</li><li>Run DDU to do a clean-reinstall of the graphics drivers. Remember to screenshot the settings in the NVIDIA control panel, as running DDU will erase them as well.</li></ul><p>By the way:</p><ul><li>In Nvidia Control Panel, make sure BFV’s Maximum pre-rendered frames is set to <code>Use the 3D application setting</code>, otherwise it causes CPU bottleneck on my machine. This improves FPS.</li><li>If you have a high-end machine, turn off Motion Blur in-game, which improves FPS.</li><li>Using Fullscreen is fine. It will not crash the game.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;Today I wanted to play BFV and upon launching it just crashes without any error message. My environment:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;i7-7
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Setting up a WireGuard server on OpenWRT</title>
    <link href="https://blog.birkhoff.me/Setting-up-a-WireGuard-server-on-OpenWRT/"/>
    <id>https://blog.birkhoff.me/Setting-up-a-WireGuard-server-on-OpenWRT/</id>
    <published>2019-02-21T14:02:57.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes it can be useful to be able to connect back to your home network to access some internal resources. I’ll share how I set up a WireGuard server on OpenWRT.</p><a id="more"></a><p>First install some WireGuard packages.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ opkg update</span><br><span class="line">$ opkg install kmod-wireguard luci-app-wireguard luci-proto-wireguard wireguard wireguard-tools</span><br></pre></td></tr></table></figure><p>Next go to <a href="https://openwrt/cgi-bin/luci/admin/network/iface_add" target="_blank" rel="noopener">https://openwrt/cgi-bin/luci/admin/network/iface_add</a>, name the VPN interface <em>wg0</em>, select <em>WireGuard VPN</em> for <em>Protocol of the new interface</em> and press submit.</p><p>We need to generate some keypairs for the server and clients. Make sure to keep them safe.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir -p /etc/wireguard</span><br><span class="line">$ wg genkey | tee /etc/wireguard/server-privatekey | wg pubkey &gt; /etc/wireguard/server-publickey</span><br><span class="line">$ wg genkey | tee client-privatekey | wg pubkey &gt; client-publickey</span><br></pre></td></tr></table></figure><p>Head to the configuration page of <em>wg0</em> interface (<a href="https://openwrt/cgi-bin/luci/admin/network/network/wg0" target="_blank" rel="noopener">https://openwrt/cgi-bin/luci/admin/network/network/wg0</a>). In <em>General Setup</em> tab, paste the content of <code>/etc/wireguard/server-privatekey</code> into <em>Private Key</em>. You can change <em>Listen Port</em> to any unused port you like. In <em>IP Addresses</em>, choose a subnet IP CIDR, for example <code>10.200.200.1/24</code>. This will be the subnet of the VPN.</p><p>Next, let’s configure some peers. Some backgrounds here. First, WireGuard does not have the concept of server/client, instead, every WireGuard device is regarded as a <em>peer</em> to each other. Before establishing a successful connection, a proper config setup on both side is required.</p><p>Add a peer using the <em>Add</em> button. The peer we’re configuring here will be the “client”. In <em>Public Key</em>, paste the content of <code>/etc/wireguard/client-publickey</code>. In <em>Allowed IPs</em>, enter a random IP address in the subnet you previously chose, for example <code>10.200.200.2/24</code>. This will be the client’s internal IP address.</p><p>Next, make sure <em>Route Allowed IPs</em> is checked. You most likely won’t need to configure <em>Endpoint Host</em> and <em>Endpoint Port</em> as we will be manually connecting to the OpenWRT WireGuard device on the client, instead of having OpenWRT aggressively establishing a connection. Put the recommended value <code>25</code> into <em>Persistent Keep Alive</em>.</p><p>In <em>Firewall Settings</em> tab, assign <em>lan</em> zone for the interface.</p><p>Hit <em>Save &amp; Apply</em>.</p><p>Next run the following to make a new <em>Traffic Rule</em> in OpenWRT firewall. Make sure to change <code>99999</code> to your previously chosen port for WireGuard interface.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uci add firewall rule</span><br><span class="line">uci <span class="built_in">set</span> firewall.@rule[-1].src=<span class="string">"*"</span></span><br><span class="line">uci <span class="built_in">set</span> firewall.@rule[-1].target=<span class="string">"ACCEPT"</span></span><br><span class="line">uci <span class="built_in">set</span> firewall.@rule[-1].proto=<span class="string">"udp"</span></span><br><span class="line">uci <span class="built_in">set</span> firewall.@rule[-1].dest_port=<span class="string">"99999"</span></span><br><span class="line">uci <span class="built_in">set</span> firewall.@rule[-1].name=<span class="string">"Allow-Wireguard-Inbound"</span></span><br><span class="line">uci commit firewall</span><br><span class="line">/etc/init.d/firewall restart</span><br></pre></td></tr></table></figure><p>The router side is done, I’ll demonstrate how to set up WireGuard on iOS. Download WireGuard app at <a href="https://itunes.apple.com/us/app/wireguard/id1441195209?mt=8" target="_blank" rel="noopener">https://itunes.apple.com/us/app/wireguard/id1441195209?mt=8</a>. Open the app, press the <em>+</em> button on the top-right side and choose <em>Create from scratch</em>. Put any name you like on the <em>Name</em> field. Paste the keypairs of the client into their respective fields. In <em>Addresses</em>, put the exact same of what you specified in <em>Allowed IPs</em> of the client peer, e.g. <code>10.200.200.2/24</code>. In <em>DNS servers</em>, put the router’s LAN IP address in. Don’t touch <em>Listen port</em> and <em>MTU</em> unless you know what you’re doing.</p><p>Add a new peer down below, and paste the server’s public key into <em>Public key</em>. Leave <em>Preshared key</em> field empty. In <em>Endpoint</em>, specify the router’s IP address or a domain name, ending with <code>:port</code>. For example <code>vpn.foobar.dev:1234</code>. Put <code>0.0.0.0/0</code> into <em>Allowed IPs</em>. Leave the rest default and hit save. Connect to the server and you should be able to access your home’s internal network on the public Internet.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sometimes it can be useful to be able to connect back to your home network to access some internal resources. I’ll share how I set up a WireGuard server on OpenWRT.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Running Clash on OpenWrt as a transparent proxy</title>
    <link href="https://blog.birkhoff.me/Running-Clash-on-OpenWrt-as-a-transparent-proxy/"/>
    <id>https://blog.birkhoff.me/Running-Clash-on-OpenWrt-as-a-transparent-proxy/</id>
    <published>2019-01-18T18:49:55.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<p>As you would have been aware of that I live in China where internet is under strict censorship. I’ve been discovering ways to access the blocked internet resources.<br><a id="more"></a></p><p>So recently I switched to a x86 mini computer that runs Proxmox VE, which has an OpenWRT VM running as a router. In this blog post, I’m using <a href="https://github.com/Dreamacro/clash" target="_blank" rel="noopener">Clash</a>, a new software that is quite the same to <a href="https://www.nssurge.com" target="_blank" rel="noopener">Surge</a>. They both support “rules” mode that routes internet traffic on your will. It’s so convenient that you don’t have to use <em>gfwlist</em> anymore, and they are more precise and customizable, like you can route Google to a Hong Kong proxy, YouTube to United States, Netflix to Japan and so forth. Clash also has a <em>redir</em> mode which can be used with <em>iptables</em> to redirect the TCP packets. We’re also gonna utilize <a href="https://www.nlnetlabs.nl/projects/unbound" target="_blank" rel="noopener">Unbound</a> and <a href="https://github.com/jedisct1/dnscrypt-proxy" target="_blank" rel="noopener">DNSCrypt-proxy</a> to solve the DNS pollution issue.</p><h1 id="Download-the-tools"><a href="#Download-the-tools" class="headerlink" title="Download the tools"></a>Download the tools</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir /etc/clash</span><br><span class="line">$ <span class="built_in">cd</span> /etc/clash</span><br><span class="line">$ wget https://github.com/Dreamacro/clash/releases/download/v0.13.0/clash-linux-amd64.tar.gz</span><br><span class="line">$ tar -xzvf clash-linux-amd64.tar.gz</span><br><span class="line">$ mv clash-linux-amd64 clash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir /etc/unbound</span><br><span class="line">$ opkg update &amp;&amp; opkg install unbound</span><br></pre></td></tr></table></figure><p>Follow this guide to install DNSCrypt-proxy: <a href="https://github.com/jedisct1/dnscrypt-proxy/wiki/Installation-on-OpenWRT" target="_blank" rel="noopener">https://github.com/jedisct1/dnscrypt-proxy/wiki/Installation-on-OpenWRT</a></p><h1 id="Make-them-into-services"><a href="#Make-them-into-services" class="headerlink" title="Make them into services"></a>Make them into services</h1><p>Put the following script to <code>/etc/init.d/clash</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh /etc/rc.common</span></span><br><span class="line"></span><br><span class="line">START=90</span><br><span class="line"></span><br><span class="line">USE_PROCD=1</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_service</span></span>() &#123;</span><br><span class="line">        procd_open_instance</span><br><span class="line">        procd_set_param <span class="built_in">command</span> /etc/clash/clash -d /etc/clash</span><br><span class="line">        procd_set_param respawn 300 0 5 <span class="comment"># threshold, timeout, retry</span></span><br><span class="line">        procd_set_param file /etc/clash/config.yml</span><br><span class="line">        procd_set_param stdout 1</span><br><span class="line">        procd_set_param stderr 1</span><br><span class="line">        procd_set_param pidfile /var/run/clash.pid</span><br><span class="line">        procd_close_instance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then run the following to make it executable:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chmod +x /etc/init.d/clash</span><br></pre></td></tr></table></figure><p>This init.d script also immediately restarts clash when it exits for whatever reason. If it crashes 5 times in 5 minutes, it won’t be restarted anymore.</p><p>The logs are in <code>/var/log/messages</code>.</p><h1 id="Write-Clash-Configuration"><a href="#Write-Clash-Configuration" class="headerlink" title="Write Clash Configuration"></a>Write Clash Configuration</h1><p>I’m not covering how to write Clash configuration in this blog post, but these options must be set as follows:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">redir-port:</span> <span class="number">9090</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:6170</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  ipv6:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  listen:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:53</span></span><br><span class="line"><span class="attr">  enhanced-mode:</span> <span class="string">redir-host</span></span><br><span class="line"><span class="attr">  nameserver:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:5353</span></span><br></pre></td></tr></table></figure><p>Let’s tear it down. <code>9090</code> is the redir port, <code>allow-lan</code> allows other devices in LAN to access the proxy and <code>external-controller</code> is the API that we’re gonna use later to control Clash.</p><p>Clash will now forward DNS requests from <code>:53</code> to <em>unbound</em> (<code>:5353</code>), which forwards DNS requests to <em>DNSCrypt-proxy</em> (<code>:5678</code>). <em>DNSCrypt-proxy</em> will then securely get the correct DNS responses using <a href="https://en.wikipedia.org/wiki/DNS_over_HTTPS" target="_blank" rel="noopener">DoH</a>.</p><h1 id="Configure-dnsmasq"><a href="#Configure-dnsmasq" class="headerlink" title="Configure dnsmasq"></a>Configure dnsmasq</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disable dnsmasq DNS server</span></span><br><span class="line">$ uci <span class="built_in">set</span> <span class="string">'dhcp.@dnsmasq[0].port=0'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure dnsmasq to send a DNS Server DHCP option with its LAN IP</span></span><br><span class="line"><span class="comment"># since it does not do this by default when port is configured.</span></span><br><span class="line">$ lan_address=$(uci get network.lan.ipaddr)</span><br><span class="line">$ uci add_list <span class="string">"dhcp.lan.dhcp_option=option:dns-server,<span class="variable">$lan_address</span>"</span></span><br><span class="line"></span><br><span class="line">$ uci commit</span><br></pre></td></tr></table></figure><h1 id="Configure-DNSCrypt-proxy"><a href="#Configure-DNSCrypt-proxy" class="headerlink" title="Configure DNSCrypt-proxy"></a>Configure DNSCrypt-proxy</h1><p>Use the example config with these options changed:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server_names = [<span class="string">'cloudflare'</span>, <span class="string">'google'</span>]</span><br><span class="line">listen_addresses = [<span class="string">'0.0.0.0:5678'</span>]</span><br><span class="line">fallback_resolver = <span class="string">'119.29.29.29:53'</span></span><br><span class="line">ignore_system_dns = <span class="literal">true</span></span><br><span class="line">forwarding_rules = <span class="string">'forwarding-rules.txt'</span></span><br></pre></td></tr></table></figure><h1 id="Configure-Unbound"><a href="#Configure-Unbound" class="headerlink" title="Configure Unbound"></a>Configure Unbound</h1><p>First download <em>named.cache</em> from InterNIC:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget ftp://FTP.INTERNIC.NET/domain/named.cache -O/etc/unbound/root.hints</span><br></pre></td></tr></table></figure><p>Then enable manual config so we can configure <em>Unbound</em> directly using it’s config file:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ uci <span class="built_in">set</span> <span class="string">'unbound.@unbound[0].manual_conf=1'</span></span><br></pre></td></tr></table></figure><p>To make China domains solve through <code>119.29.29.29</code> instead of foreign <em>DNSCrypt-proxy</em>, we’re using <a href="https://github.com/felixonmars/dnsmasq-china-list.git" target="_blank" rel="noopener">https://github.com/felixonmars/dnsmasq-china-list</a>.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/felixonmars/dnsmasq-china-list.git</span><br><span class="line">$ <span class="built_in">cd</span> dnsmasq-china-list</span><br><span class="line">$ make SERVER=119.29.29.29 unbound</span><br><span class="line">$ mkdir /etc/unbound/unbound.conf.d</span><br><span class="line">$ cp accelerated-domains.china.unbound.conf /etc/unbound/unbound.conf.d</span><br></pre></td></tr></table></figure><p>Finally, this is the config I’m currently using:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">include:</span> <span class="string">"/etc/unbound/unbound.conf.d/accelerated-domains.china.unbound.conf"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">verbosity:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">directory:</span> <span class="string">"/etc/unbound"</span></span><br><span class="line"><span class="attr">num-threads:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">msg-cache-slabs:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">rrset-cache-slabs:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">infra-cache-slabs:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">key-cache-slabs:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">interface:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">access-control:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/8</span> <span class="string">allow</span></span><br><span class="line"><span class="attr">outgoing-num-tcp:</span> <span class="number">256</span></span><br><span class="line"><span class="attr">incoming-num-tcp:</span> <span class="number">1024</span></span><br><span class="line"><span class="attr">outgoing-port-permit:</span> <span class="string">"10240-65335"</span></span><br><span class="line"><span class="attr">outgoing-range:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">num-queries-per-thread:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">msg-buffer-size:</span> <span class="number">8192</span></span><br><span class="line"><span class="attr">infra-cache-numhosts:</span> <span class="number">200</span></span><br><span class="line"><span class="attr">key-cache-size:</span> <span class="number">100</span><span class="string">k</span></span><br><span class="line"><span class="attr">neg-cache-size:</span> <span class="number">10</span><span class="string">k</span></span><br><span class="line"><span class="attr">target-fetch-policy:</span> <span class="string">"2 1 0 0 0 0"</span></span><br><span class="line"><span class="attr">harden-large-queries:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">harden-short-bufsize:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">5353</span></span><br><span class="line"><span class="attr">so-rcvbuf:</span> <span class="number">4</span><span class="string">m</span></span><br><span class="line"><span class="attr">so-sndbuf:</span> <span class="number">4</span><span class="string">m</span></span><br><span class="line"><span class="attr">so-reuseport:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">msg-cache-size:</span> <span class="number">64</span><span class="string">m</span></span><br><span class="line"><span class="attr">rrset-cache-size:</span> <span class="number">128</span><span class="string">m</span></span><br><span class="line"><span class="attr">cache-max-ttl:</span> <span class="number">3600</span></span><br><span class="line"><span class="attr">do-ip4:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">do-ip6:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">do-udp:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">do-tcp:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">tcp-upstream:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">use-syslog:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">log-queries:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">root-hints:</span> <span class="string">"/etc/unbound/root.hints"</span></span><br><span class="line"><span class="attr">hide-identity:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">hide-version:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">identity:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">harden-glue:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/8</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="number">172.16</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="number">169.254</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="attr">fd00::/8</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="attr">fe80::/10</span></span><br><span class="line"><span class="attr">private-address:</span> <span class="string">::ffff:0:0/96</span></span><br><span class="line"><span class="attr">unwanted-reply-threshold:</span> <span class="number">10000000</span></span><br><span class="line"><span class="attr">do-not-query-localhost:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">prefetch:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">minimal-responses:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">module-config:</span> <span class="string">"iterator"</span></span><br><span class="line"><span class="attr">forward-zone:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">"."</span></span><br><span class="line"><span class="attr">    forward-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">@5678</span></span><br></pre></td></tr></table></figure><h1 id="Launch-the-services"><a href="#Launch-the-services" class="headerlink" title="Launch the services"></a>Launch the services</h1><p>Run the following to make <em>Clash</em>, <em>DNScrypt-proxy</em> and <em>Unbound</em> launch at system startup:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service clash <span class="built_in">enable</span></span><br><span class="line">$ service dnscrypt-proxy <span class="built_in">enable</span></span><br><span class="line">$ service unbound <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>Apply the changes:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service dnscrypt-proxy restart</span><br><span class="line">$ service unbound restart</span><br><span class="line">$ service clash restart</span><br></pre></td></tr></table></figure><h1 id="Redirect-the-traffic-to-Clash"><a href="#Redirect-the-traffic-to-Clash" class="headerlink" title="Redirect the traffic to Clash"></a>Redirect the traffic to Clash</h1><p>Go to <code>https://ROUTER_IP/cgi-bin/luci/admin/network/firewall/custom</code>, append the following to the end of rules. <strong>Be aware that you need to change <code>YOUR_SSH_PORT</code>.</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -N clash_lan</span><br><span class="line">iptables -t nat -A clash_lan -d 0.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t nat -A clash_lan -d 240.0.0.0/4 -j RETURN</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable the proxy for 10.0.0.123</span></span><br><span class="line"><span class="comment"># iptables -t nat -A clash_lan -s 10.0.0.123 -j RETURN</span></span><br><span class="line"></span><br><span class="line">iptables -t nat -A clash_lan -p tcp --dport YOUR_SSH_PORT -j ACCEPT</span><br><span class="line">iptables -t nat -A clash_lan -p tcp --dport 80 -j REDIRECT --to-ports 9090</span><br><span class="line">iptables -t nat -A clash_lan -p tcp --dport 443 -j REDIRECT --to-ports 9090</span><br><span class="line">iptables -t nat -A clash_lan -p tcp --dport 53 -j REDIRECT --to-ports 53</span><br><span class="line"></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -j clash_lan</span><br><span class="line"></span><br><span class="line"><span class="comment"># Chromecast</span></span><br><span class="line">iptables -t nat -A PREROUTING -s IP_CIDR_OF_CHROMECAST_IF_YOU_HAVE_ANY -p udp --dport 53 -j REDIRECT --to-ports 53</span><br><span class="line">iptables -t nat -A PREROUTING -s IP_CIDR_OF_CHROMECAST_IF_YOU_HAVE_ANY -p tcp --dport 53 -j REDIRECT --to-ports 53</span><br></pre></td></tr></table></figure><p>You can now open your browser now and go to <code>https://ipinfo.io</code> to see if it works!</p><h1 id="Control-Clash"><a href="#Control-Clash" class="headerlink" title="Control Clash"></a>Control Clash</h1><p>Remember <code>external-controller</code>? We’re gonna make use of it… right now.</p><p>There’s a fantastic web interface that does exactly the work: <a href="http://clash.razord.top/" target="_blank" rel="noopener">http://clash.razord.top/</a>. Use your OpenWrt IP address, and port <code>6170</code>.</p><p>Be ware that Clash does <em>not</em> remember your choices of servers between restarts.</p><h1 id="Check-the-logs"><a href="#Check-the-logs" class="headerlink" title="Check the logs"></a>Check the logs</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ logread -e clash -f</span><br></pre></td></tr></table></figure><h1 id="Last-words"><a href="#Last-words" class="headerlink" title="Last words"></a>Last words</h1><p>I’m also using WireGuard to connect back to my home network when I’m not in house. If you want to know further more how to configure WireGuard to work with this approach (Clash + Unbound), comment down below.</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><ul><li><a href="https://github.com/Dreamacro/clash" target="_blank" rel="noopener">https://github.com/Dreamacro/clash</a></li><li><a href="https://blog.phoenixlzx.com/2016/04/27/better-dns-with-unbound/" target="_blank" rel="noopener">https://blog.phoenixlzx.com/2016/04/27/better-dns-with-unbound/</a></li><li><a href="https://github.com/SukkaW/Koolshare-Clash" target="_blank" rel="noopener">https://github.com/SukkaW/Koolshare-Clash</a></li><li><a href="https://openwrt.org/docs/guide-user/services/dns/unbound" target="_blank" rel="noopener">https://openwrt.org/docs/guide-user/services/dns/unbound</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As you would have been aware of that I live in China where internet is under strict censorship. I’ve been discovering ways to access the blocked internet resources.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Change GRUB timeout in OpenWrt to speed up boot process</title>
    <link href="https://blog.birkhoff.me/Change-GRUB-timeout-in-OpenWrt-to-speed-up-boot-process/"/>
    <id>https://blog.birkhoff.me/Change-GRUB-timeout-in-OpenWrt-to-speed-up-boot-process/</id>
    <published>2019-01-17T15:57:55.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I’m playing with my OpenWrt router on a PVE machine, and I noticed that there’s a 5 second timeout in the boot procedure.<br><a id="more"></a><br>It’s important to have a router boot up fast. So I searched online how to change the timeout setting. Unfortunately OpenWrt isn’t Debian, while most tutorials I found online is Debian or RHEL. So stuff works quite differently.</p><p>After some digging I found that you can actually override <code>/boot/grub/grub.cfg</code>, because there’s no <code>grub-mkconfig</code>. But <code>/boot</code> was read-only for me, so I first had to run</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mount -o remount,rw /boot</span><br></pre></td></tr></table></figure><p>And finally I could do</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>According to the GRUB documentation:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">'GRUB_TIMEOUT'</span></span><br><span class="line">     Boot the default entry this many seconds after the menu is</span><br><span class="line">     displayed, unless a key is pressed.  The default is <span class="string">'5'</span>.  Set to</span><br><span class="line">     <span class="string">'0'</span> to boot immediately without displaying the menu, or to <span class="string">'-1'</span> to</span><br><span class="line">     <span class="built_in">wait</span> indefinitely.</span><br><span class="line"></span><br><span class="line">     If <span class="string">'GRUB_TIMEOUT_STYLE'</span> is <span class="built_in">set</span> to <span class="string">'countdown'</span> or <span class="string">'hidden'</span>, the</span><br><span class="line">     timeout is instead counted before the menu is displayed.</span><br></pre></td></tr></table></figure><p>I set <code>GRUB_TIMEOUT</code> to <code>0</code>, and it worked flawlessly.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Recently I’m playing with my OpenWrt router on a PVE machine, and I noticed that there’s a 5 second timeout in the boot procedure.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Build tmux on CentOS 7</title>
    <link href="https://blog.birkhoff.me/build-tmux-on-centos-7/"/>
    <id>https://blog.birkhoff.me/build-tmux-on-centos-7/</id>
    <published>2018-11-25T06:24:40.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<p>So I have been recently annoyed with some super strange display issues that tmux 2.7 on my server produces. After some digging I decided to re-build version 2.8 (which is the latest release as of time of writing) of tmux.<br><a id="more"></a></p><p>We’ll be grabbing the official tmux repo from <a href="https://github.com/tmux/tmux" target="_blank" rel="noopener">https://github.com/tmux/tmux</a>, build version 2.8 and install it. Note that you’ll need root privileges to install tmux.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum remove tmux <span class="comment"># remove old version of tmux</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/tmux/tmux.git</span><br><span class="line">$ <span class="built_in">cd</span> tmux</span><br><span class="line">$ git checkout 2.8</span><br><span class="line">$ sh autogen.sh</span><br><span class="line">$ sudo yum install libevent-devel ncurses-devel automake</span><br><span class="line">$ ./configure &amp;&amp; make</span><br><span class="line">$ sudo make install</span><br><span class="line">$ tmux <span class="comment"># profit</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;So I have been recently annoyed with some super strange display issues that tmux 2.7 on my server produces. After some digging I decided to re-build version 2.8 (which is the latest release as of time of writing) of tmux.&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://blog.birkhoff.me/categories/linux/"/>
    
    
      <category term="tmux" scheme="https://blog.birkhoff.me/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>Solve &quot;The Firebase CLI login request was rejected or an error occurred&quot; when behind a proxy on macOS</title>
    <link href="https://blog.birkhoff.me/solve-firebase-login-error-behind-proxy-mac/"/>
    <id>https://blog.birkhoff.me/solve-firebase-login-error-behind-proxy-mac/</id>
    <published>2018-11-08T05:13:47.000Z</published>
    <updated>2020-02-20T13:04:37.064Z</updated>
    
    <content type="html"><![CDATA[<p><strong>TL;DR:</strong> Use <a href="https://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a> if you’re using HTTP/SOCKS proxy</p><p>Today when I tried to login to Firebase CLI I ran into an issue that stopped me from logging in. After approving the login request on Google’s login page, the page kept loading something (a page served on <code>localhost</code>) and eventually it went to this page:</p><p><img src="/content/images/2018/04/Screen-Shot-2018-04-13-at-9.46.12-AM.png" alt="Screen-Shot-2018-04-13-at-9.46.12-AM"></p><p>In CLI:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">▶ firebase login --debug</span><br><span class="line"></span><br><span class="line">[2018-04-13T01:44:43.513Z] ----------------------------------------------------------------------</span><br><span class="line">[2018-04-13T01:44:43.518Z] Command:       /Users/birkhoff/.nvm/versions/node/v6.9.4/bin/node /usr/local/bin/firebase login --debug</span><br><span class="line">[2018-04-13T01:44:43.519Z] CLI Version:   3.18.3</span><br><span class="line">[2018-04-13T01:44:43.519Z] Platform:      darwin</span><br><span class="line">[2018-04-13T01:44:43.519Z] Node Version:  v6.9.4</span><br><span class="line">[2018-04-13T01:44:43.520Z] Time:          Fri Apr 13 2018 09:44:43 GMT+0800 (CST)</span><br><span class="line">[2018-04-13T01:44:43.520Z] ----------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">? Allow Firebase to collect anonymous CLI usage and error reporting information? No</span><br><span class="line"></span><br><span class="line">Visit this URL on any device to log in:</span><br><span class="line">https://accounts.google.com/o/oauth2/xxxxxxxxxxxxx</span><br><span class="line"></span><br><span class="line">Waiting for authentication...</span><br><span class="line">[2018-04-13T01:44:52.780Z] &gt;&gt;&gt; HTTP REQUEST POST https://accounts.google.com/o/oauth2/token</span><br><span class="line"> &#123; code: &apos;xxxxxxx&apos;,</span><br><span class="line">  client_id: &apos;xxxxxxxx&apos;,</span><br><span class="line">  client_secret: &apos;xxxxxxxxx&apos;,</span><br><span class="line">  redirect_uri: &apos;http://localhost:9005&apos;,</span><br><span class="line">  grant_type: &apos;authorization_code&apos; &#125;</span><br><span class="line"> Fri Apr 13 2018 09:44:52 GMT+0800 (CST)</span><br></pre></td></tr></table></figure><p>I searched on Google, and I came across this <a href="https://stackoverflow.com/a/41040601/2465955" target="_blank" rel="noopener">StackOverflow answer</a>. Looks like there’s a known bug that Firebase CLI can’t work properly behind a proxy. I quickly realized I have environment variable <code>ALL_PROXY</code>, <code>http_proxy</code> and <code>https_proxy</code> set because I’m using a proxy.</p><p>The ultimate solution is to use a system-wide proxy, which in this case <a href="https://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a> is a very good choice, should you’re using macOS. This kind of software makes <strong>all</strong> traffic go through a SOCKS5 proxy, so you won’t have to manually set the env variable and therefore the problem gets solved.</p><p><img src="/content/images/2018/04/Screen-Shot-2018-04-13-at-9.55.42-AM.png" alt="Screen-Shot-2018-04-13-at-9.55.42-AM"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;a href=&quot;https://www.proxifier.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Proxifier&lt;/a&gt; if you’re using HTTP/SOCKS 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Redirect domains to specific URLs with Traefik</title>
    <link href="https://blog.birkhoff.me/redirect-domains-to-specific-urls-with-traefik/"/>
    <id>https://blog.birkhoff.me/redirect-domains-to-specific-urls-with-traefik/</id>
    <published>2018-10-20T17:39:28.000Z</published>
    <updated>2018-10-20T18:03:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>I recently again needed to redirect a specific domain to a URL. For example redirecting <code>google.birkhoff.me</code> to <code>https://www.google.com</code>.</p><p>I used to run some Docker containers which runs some web servers that redirect HTTP requests to make this work. I knew from the beginning that it wasn’t the most elegant or efficient way to do so, but I didn’t have any other idea for that. A friend once told me Firebase will do the job, but it’s limited to redirecting to a domain, not a URL, so no.</p><p>So today I was about to do the same thing (you can see me forked <a href="https://github.com/MorbZ/docker-web-redirect" target="_blank" rel="noopener">MorbZ/docker-web-redirect</a> to <a href="https://github.com/BirkhoffLee/docker-web-redirect" target="_blank" rel="noopener">BirkhoffLee/docker-web-redirect today</a>), changed a bit in the repo and when I launched it up. All of a sudden when I was dealing with Traefik stuff I thought Traefik could’ve been doing the job for me, if I configured it correctly.</p><p>After searching around for a bit, some related GitHub issues came up, without the exact solutions. My workaround has some benefits:</p><ul><li>does not need any other program to handle requests, therefore it’s efficient</li><li>built-in regex redirection support</li><li>centralized, easier to manage</li></ul><p>This is the configuration block that you would want to put in your <code>traefik.toml</code>:</p><pre><code>[file]  [backends]    [backends.fake]      [backends.fake.servers.s1]        url=&quot;http://1.2.3.4&quot;  [frontends]    [frontends.r1]      backend = &quot;fake&quot;      [frontends.r1.routes.host]        rule = &quot;Host:test.birkhoff.me&quot;      [frontends.r1.redirect]        regex = &quot;^https?://test.birkhoff.me/(.*)&quot;        replacement = &quot;https://google.com&quot;        permanent = true    [frontends.r2]      backend = &quot;fake&quot;      [frontends.r2.routes.host]        rule = &quot;Host:another-test.birkhoff.me&quot;      [frontends.r2.redirect]        regex = &quot;^https?://another-test.birkhoff.me/(.*)&quot;        replacement = &quot;https://twitter.com/$1&quot;        permanent = false    # so forth..</code></pre><p>I hope I can get a centralized, web-based management panel that runs on a Docker container so I can manage these stuff more efficiently. If you have any other solutions to this topic, please comment down below to let me know!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I recently again needed to redirect a specific domain to a URL. For example redirecting &lt;code&gt;google.birkhoff.me&lt;/code&gt; to &lt;code&gt;https://
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Forza Horizon 4 PC won&#39;t launch, or says sign-in needed</title>
    <link href="https://blog.birkhoff.me/forza-horizon-4-pc-wont-launch-or-says-sign-in-needed/"/>
    <id>https://blog.birkhoff.me/forza-horizon-4-pc-wont-launch-or-says-sign-in-needed/</id>
    <published>2018-10-01T18:15:19.000Z</published>
    <updated>2018-10-01T18:27:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>So today I excitedly opened up my pre-ordered Forza Horizon 4 and seems that the splash screen shows up for 4 seconds, disappears and the game won’t launch.</p><p>I’ve searched on Internet and found out you need to download a random app from the Microsoft Store app and the game launches.</p><blockquote><p>Note that you will need to have RTSS application detection level set to None (globally) if you have that installed.</p></blockquote><p>It wasn’t the end. When the beautiful music started, the awesome graphics showed up, I immediately pressed Y on my Xbox One controller. The game still won’t let me play. It’s a $60 game and I shouldn’t be treated like this. Luckily I found another fix on the internet, it turns out that you need to do the following steps to get everything working.</p><ol><li>Press Windows key + X</li><li>Then click Windows Powershell (Admin)</li><li>Now type the following commands and hit Enter key</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ Get-AppxPackage *windowsstore* | Remove-AppxPackage</span><br><span class="line">$ Get-AppxPackage *xboxapp* | Remove-AppxPackage</span><br><span class="line">$ Get-AppxPackage -AllUsers| Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>Open Xbox app, and you should be able to sign in and play. Enjoy!</li></ol><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://answers.microsoft.com/en-us/windows/forum/windows_10-windows_store/xbox-app-error-0x406/09dc12db-97ee-4907-89b8-3a2b7ebe1507" target="_blank" rel="noopener">https://answers.microsoft.com/en-us/windows/forum/windows_10-windows_store/xbox-app-error-0x406/09dc12db-97ee-4907-89b8-3a2b7ebe1507</a><br><a href="https://www.reddit.com/r/forza/comments/8idqey/forza_7_doesnt_start_on_pc/" target="_blank" rel="noopener">https://www.reddit.com/r/forza/comments/8idqey/forza_7_doesnt_start_on_pc/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;So today I excitedly opened up my pre-ordered Forza Horizon 4 and seems that the splash screen shows up for 4 seconds, disappears and the
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>macOS Mojave: Continuity Camera</title>
    <link href="https://blog.birkhoff.me/macos-mojave-continuity-camera/"/>
    <id>https://blog.birkhoff.me/macos-mojave-continuity-camera/</id>
    <published>2018-09-25T15:51:29.000Z</published>
    <updated>2018-09-25T15:59:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Today Apple pushed the new major update of macOS, Mojave. One of its most important new feature is Continuity Camera. In short terms, your Mac gets the photo file immediately from your iPhone/iPad when you take one.</p><p>Here’s how it works:</p><ul><li>You right-click on a supported App, or simply your Mac desktop</li><li>Choose <em>Import</em> from <em>iPhone</em> &gt; <em>Take Photo</em></li><li>Your iPhone automatically opens Camera app</li><li>You set the Flashlight, focus, brightness or something else, and you press the shoot button</li><li>You click on <em>Use Photo</em> on your iPhone</li><li>Your Mac <em>immediately</em> gets the photo file, to where your initial import request came from, for example, saving to your desktop.</li></ul><p>I’ve always loved how Apple’s products work simultaneously, like universal clipboard has been very useful too.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Today Apple pushed the new major update of macOS, Mojave. One of its most important new feature is Continuity Camera. In short terms, you
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Improve your CLI experience</title>
    <link href="https://blog.birkhoff.me/improve-your-cli-experience/"/>
    <id>https://blog.birkhoff.me/improve-your-cli-experience/</id>
    <published>2018-09-11T14:26:43.000Z</published>
    <updated>2018-09-11T14:42:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>I recently read <a href="https://remysharp.com/2018/08/23/cli-improved" target="_blank" rel="noopener">this awesome blog post</a> and I’m desperate to share it to you :)</p><p>This blog post mainly introduces:</p><ul><li>bat: <code>cat</code> super-powered. Built-in syntax highlighting &amp; scrolling.</li><li>prettyping: Beautified <code>ping</code>. You can also alias this to the default <code>ping</code>.</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ curl -O https://raw.githubusercontent.com/denilsonsa/prettyping/master/prettyping &amp;&amp; chmod +x prettyping &amp;&amp; sudo mv prettyping /usr/local/bin</span><br></pre></td></tr></table></figure><ul><li>fzf: <em>A fuzzy search against the terminal history, with a fully interactive preview of the possible matches.</em></li><li>htop: <code>top</code> improved</li><li>diff-so-fancy: <code>diff</code> enhanced</li><li>fd: a modern replacement for <code>find</code></li><li>ncdu: DaisyDisk alternative in CLI. Calculates disk usage, interactively.</li><li>tldr: Throw away man pages! tldr is the new hype.</li><li>ack / ag: I don’t personally use it, but I’m looking forward to using it in the future.</li><li>jq: JSON parser in the CLI</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I recently read &lt;a href=&quot;https://remysharp.com/2018/08/23/cli-improved&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;this awesome blog post&lt;/a&gt; and I’m
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Make sudo authenticate with Touch ID in a tmux session</title>
    <link href="https://blog.birkhoff.me/make-sudo-authenticate-with-touch-id-in-a-tmux/"/>
    <id>https://blog.birkhoff.me/make-sudo-authenticate-with-touch-id-in-a-tmux/</id>
    <published>2018-09-01T17:45:34.000Z</published>
    <updated>2018-10-10T13:55:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>After the recent switch to <a href="https://github.com/samoshkin/tmux-config" target="_blank" rel="noopener">https://github.com/samoshkin/tmux-config</a>, I have been fully working under tmux sessions. Recently I found that the Touch ID authentication for sudo haven’t been working. I searched over the Internet and found out <code>pam_tid.so</code> itself is kinda incompatible with <em>tmux</em>.</p><p>To solve this, I had to use a simple hack (someone made the solution for us, thanks!). I use <a href="https://github.com/fabianishere/pam_reattach" target="_blank" rel="noopener">fabianishere/pam_reattach</a>, a PAM module for reattaching to the authenticating user’s per-session bootstrap namespace on macOS, and it’s updated just 18 days ago as the time of writing!</p><p>To install <code>pam_reattach</code>, you will need to run the following commands to download sources, build and finally, install.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd</span><br><span class="line">$ git clone https://github.com/fabianishere/pam_reattach</span><br><span class="line">$ cd pam_reattach</span><br><span class="line">$ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local $(pwd)</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><p>Ultimately, make sure <code>/etc/pam.d/sudo</code> looks like this in the beginning of file:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auth     optional     pam_reattach.so</span><br><span class="line">auth     sufficient   pam_tid.so</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>(Note that on major macOS updates you need to re-do the whole process once again.)</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li><a href="https://github.com/fabianishere/pam_reattach" target="_blank" rel="noopener">https://github.com/fabianishere/pam_reattach</a></li><li><a href="https://apple.stackexchange.com/questions/259093/can-touch-id-for-the-mac-touch-bar-authenticate-sudo-users-and-admin-privileges/306324#306324" target="_blank" rel="noopener">https://apple.stackexchange.com/questions/259093/can-touch-id-for-the-mac-touch-bar-authenticate-sudo-users-and-admin-privileges/306324#306324</a></li><li><a href="https://superuser.com/questions/1342926/sudo-with-auth-sufficient-pam-tid-so-does-not-work-with-tmux/1348180" target="_blank" rel="noopener">https://superuser.com/questions/1342926/sudo-with-auth-sufficient-pam-tid-so-does-not-work-with-tmux/1348180</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;After the recent switch to &lt;a href=&quot;https://github.com/samoshkin/tmux-config&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/samoshkin
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Chrome extensions that I as a developer/gamer use</title>
    <link href="https://blog.birkhoff.me/chrome-extensions-that-i-as-a-developer-gamer-use/"/>
    <id>https://blog.birkhoff.me/chrome-extensions-that-i-as-a-developer-gamer-use/</id>
    <published>2018-08-24T17:26:37.000Z</published>
    <updated>2018-09-01T18:00:17.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://1password.com" target="_blank" rel="noopener">1Password</a><ul><li>The best password manager on the market!</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/claire/fgbpcgddpmjmamlibbaobboigaijnmkl" target="_blank" rel="noopener">Claire</a><ul><li>“Shows an orange cloud in the omnibar when you are browsing a site that uses Cloudflare”</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/couponmate-coupon-codes-d/adbhdjeibblklgabojjefiakbcienead" target="_blank" rel="noopener">CouponMate: Coupon Codes &amp; Deals</a></li><li><a href="https://chrome.google.com/webstore/detail/fngmhnnpilhplaeedifhccceomclgfbg" target="_blank" rel="noopener">EditThisCookie</a><ul><li>Every web developer should be aware of this extension. Cookie editor.</li></ul></li><li><a href="https://www.enhancedsteam.com/" target="_blank" rel="noopener">Enhanced Steam</a><ul><li>Steam web version enhanced</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/flashcontrol/mfidmkgnfgnkihnjeklbekckimkipmoe" target="_blank" rel="noopener">Flashcontrol</a><ul><li>“Block Flash from loading automatically and allow content only on selected sites.”</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/https-everywhere/gcbommkclmclpchllfjekcdonpmejbdp" target="_blank" rel="noopener">HTTPS Everywhere</a><ul><li>By <a href="https://www.eff.org/" target="_blank" rel="noopener">EFF</a></li></ul></li><li><a href="https://chrome.google.com/webstore/detail/minerblock/emikbbbebcdfohonlaifafnoanocnebl" target="_blank" rel="noopener">minerBlock</a><ul><li>I think uBlock Origin should do the work, but I haven’t removed this yet.</li></ul></li><li><a href="https://nimbus.everhelper.me/" target="_blank" rel="noopener">Nimbus Screenshot &amp; Screen Video Recorder</a></li><li><a href="https://github.com/buunguyen/octotree" target="_blank" rel="noopener">Octotree</a><ul><li>Absolutely recommended. Adds a nice file navigator at the left side of a GitHub repo web page. Very convinent when you need to find a file.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/merge-windows/mmpokgfcmbkfdeibafoafkiijdbfblfg" target="_blank" rel="noopener">Merge Windows</a><ul><li>Click to merge all tabs on every Chrome window, pretty convinent</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/openload-video-only/leallakffbiflfgpmamdgcojddnbfdgo" target="_blank" rel="noopener">Openload Video Only</a><ul><li>Very convinent when you use Openload frequently ( ͡° ͜ʖ ͡°)</li><li>When you open an Openload link, it automatically redirects you to the actual video link. When used with a download manager extension (I use IDM), you can download it as soon as you click on the link.</li></ul></li><li><a href="https://www.pushbullet.com/" target="_blank" rel="noopener">Pushbullet</a><ul><li>One of my favourite extensions. Send everything across your devices.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a><ul><li>A must-know and must-have app if you use proxies to access the Internet or behind a firewall like GFW. <strong>Extremely</strong> recommended.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/super-netflix/aioencjhbaolepcoappllicjebblphoc" target="_blank" rel="noopener">Super Netflix</a><ul><li>“Change video quality, Control video speed, Upload custom subtitles and much more - Make Your Experience on Netflix More Enjoyable.”</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a><ul><li>Very recommended. Userscript extension.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/toby-for-chrome/hddnkoipeenegfoeaoibdmnaalmgkpip" target="_blank" rel="noopener">Toby for Chrome</a><ul><li>“Better than bookmarks. Organize your browser tabs and access them quickly anywhere.”</li><li>Not very frequently used, but worth to mention.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener">uBlock Origin</a><ul><li>A well-known ad-blocker</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/universal-bypass/aihomhdbhpnpmcnnbckjjcebjoikpihj" target="_blank" rel="noopener">Universal Bypass</a><ul><li>“Universal Bypass has bypasses for sites which make you wait (Adf.ly, Adfoc.us, etc.), sites which make you do something (sub2unlock.com, viid.su, etc.) and even trackers (Bit.ly, Goo.gl, T.co, etc.). Plus, you can write custom bypasses!”</li><li>Very recommended</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg" target="_blank" rel="noopener">User-Agent Switcher for Chrome</a><ul><li>A must-have for web developers and pentesters.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/webrtc-leak-prevent/eiadekoaikejlgdbkbdfeijglgfdalml" target="_blank" rel="noopener">WebRTC Leak Prevent</a><ul><li>“This will protect against WebRTC leaks.”</li><li>WebRTC by default would give malicious web apps your real IP address even if you are behind a proxy. Use this to protect your IP address.</li></ul></li><li><a href="https://chrome.google.com/webstore/detail/worldbrains-memex/abkfbakhjpmblaafnpgjppbmioombali" target="_blank" rel="noopener">WorldBrain’s Memex</a><ul><li>Very helpful &amp; convinent. Very recommended.</li><li>“Find previously visited websites &amp; PDFs in seconds. Full-text search your browsing history and bookmarks.”</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://1password.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1Password&lt;/a&gt;&lt;ul&gt;&lt;li&gt;The best password manager on the market!&lt;/li&gt;&lt;/u
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在中國使用 Discord</title>
    <link href="https://blog.birkhoff.me/use-discord-in-china/"/>
    <id>https://blog.birkhoff.me/use-discord-in-china/</id>
    <published>2018-08-23T10:36:16.000Z</published>
    <updated>2018-08-24T08:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>遊玩國際多人線上遊戲的需求，追求低延遲</li><li>使用國際網路資源的需求，追求高速度</li><li>使用 Discord 的需求，追求低延遲、高穩定</li></ul><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ul><li>使用國際網路資源：使用 Shadowsocks 即可</li><li>線上遊戲：Shadowsocks 雖然也可以搭配 SSTAP 作「全局加速」，但是穩定性與延遲取決於線路品質，一般來說對於追求低延遲的 FPS 遊戲來說會很慘。因此選擇專業的網易 UU 加速器（注：加速器就是 VPN）。</li><li>Discord：中國當地的加速器目前只有「奇游加速器」支援加速 Discord，不過奇游的線路品質個人覺得不是很穩定，因此只有 Shadowsocks 這個選擇。</li></ul><h1 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h1><ul><li>使用國際網路資源：使用 shadowsocks-windows，瀏覽器設定 SOCKS5 proxy。這取決於你的需求，這裡不多著墨。</li><li>線上遊戲：網易 UU 加速器</li><li>Discord：這部分比較麻煩，我目前建議的做法是用 Discord For Windows 搭配 Proxifier + shadowcocks-windows 來完成，而且 Shadowsocks 伺服器<strong>必須</strong>要支援 UDP 轉發，而且穩定性與延遲都要夠好。我目前在使用 <a href="https://portal.rixcloud.me/aff.php?aff=2004" target="_blank" rel="noopener">rixCloud</a> 提供的 Shadowsocks 服務，所有 node 經國內伺服器中轉以保證穩定性。因價格因素，推薦公司行號或這方面需求大的人使用。本文重撰前因不夠了解 Proxifier 而推薦 ProxyCap，在這裡說聲抱歉，ProxyCap 與 UU 加速器太容易衝突了，因此不是一個好的方案。</li></ul><h1 id="Proxifier"><a href="#Proxifier" class="headerlink" title="Proxifier"></a>Proxifier</h1><p>先在 Proxy Servers 那邊加一下 127.0.0.1:1080 然後在 Proxification Rules 那邊設定一下 Discord 有關的應用程式全部 Proxy 就可以了。</p><p><img src="discord-with-proxifier.png" alt=""></p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><ul><li>遊戲透過 UU 加速器大幅降低 latency 與 loss</li><li>Discord 透過 Proxifier 再透過 SS <strong>大幅</strong>降低 latency 與 loss 且提升穩定性</li><li>Discord 被 GFW 封鎖的情況可以順便解決</li></ul><h1 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h1><p>在中國想用正常的東西都蠻困難的，其實還是建議換到 Teamspeak。可以看看 <a href="http://www.ts1.cn" target="_blank" rel="noopener">http://www.ts1.cn</a> 提供的服務，都是阿里雲上海、杭州之類的伺服器，延遲在我這裡只有 10+ ms，對我來說是非常適合……</p><p>最後附上一張直連 Discord HK RTC server 的 traceroute:</p><p><img src="discord-rtc-traceroute.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;遊玩國際多人線上遊戲的需求，追求低延遲&lt;/li&gt;&lt;li&gt;使用國際網路資源的需求，追求高速度&lt;/li&gt;&lt;li&gt;使用 Discord 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Analyze disk space usage on CentOS / RedHat with ncdu</title>
    <link href="https://blog.birkhoff.me/analyze-disk-space-usage-on-centos-redhat-with-ncdu/"/>
    <id>https://blog.birkhoff.me/analyze-disk-space-usage-on-centos-redhat-with-ncdu/</id>
    <published>2018-08-03T07:40:15.000Z</published>
    <updated>2018-09-05T16:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://dev.yorhel.nl/ncdu" target="_blank" rel="noopener">ncdu</a> is an interactive disk space analyzer software on Linux, which I found itself pretty convinent.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>It’s pretty straightforward, install dependancies, configure, make and make install. Done.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ yum install ncurses-devel ncurses wget -y</span><br><span class="line">$ wget https://dev.yorhel.nl/download/ncdu-1.13.tar.gz</span><br><span class="line">$ tar -zxvf ncdu-1.13.tar.gz</span><br><span class="line">$ rm ncdu-1.13.tar.gz</span><br><span class="line">$ cd ncdu-1.13</span><br><span class="line">$ ./configure --prefix=/usr</span><br><span class="line">$ make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>It’s interactive. Use <code>?</code> to view help.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ncdu</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://unix.stackexchange.com/questions/3979/how-can-i-install-ncdu-on-red-hat" target="_blank" rel="noopener">https://unix.stackexchange.com/questions/3979/how-can-i-install-ncdu-on-red-hat</a></li><li><a href="https://www.cyberciti.biz/faq/linux-error-cursesh-no-such-file-directory/" target="_blank" rel="noopener">https://www.cyberciti.biz/faq/linux-error-cursesh-no-such-file-directory/</a></li><li><a href="https://unix.stackexchange.com/questions/73818/how-to-find-free-disk-space-and-analyze-disk-usage" target="_blank" rel="noopener">https://unix.stackexchange.com/questions/73818/how-to-find-free-disk-space-and-analyze-disk-usage</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://dev.yorhel.nl/ncdu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ncdu&lt;/a&gt; is an interactive disk space analyzer software on Linux, whi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Send emails through Mailgun SMTP on CentOS 7</title>
    <link href="https://blog.birkhoff.me/send-email-thru-mailgun-on-centos-7/"/>
    <id>https://blog.birkhoff.me/send-email-thru-mailgun-on-centos-7/</id>
    <published>2018-07-30T01:22:09.000Z</published>
    <updated>2018-08-08T07:06:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>Install the dependencies:<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ yum install postfix cyrus-sasl-plain cyrus-sasl-md5 mailx -y</span><br></pre></td></tr></table></figure><p></p><p>In <code>/etc/postfix/main.cf</code>, append the following to the end of file:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">relayhost = smtp.mailgun.org</span><br><span class="line">smtp_sasl_auth_enable = yes</span><br><span class="line">smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd</span><br><span class="line">smtp_sasl_security_options = noanonymous</span><br><span class="line">smtp_sasl_tls_security_options = noanonymous</span><br><span class="line">smtp_sasl_mechanism_filter = AUTH LOGIN</span><br></pre></td></tr></table></figure><p>Run the following to configure the authentication details:<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo &apos;smtp.mailgun.org postmaster@&lt;mailgun_host&gt;:&lt;mailgun_credentials&gt;&apos; &gt; /etc/postfix/sasl_passwd</span><br><span class="line">$ chmod 600 /etc/postfix/sasl_passwd</span><br><span class="line">$ postmap /etc/postfix/sasl_passwd</span><br><span class="line">$ systemctl restart postfix</span><br></pre></td></tr></table></figure><p></p><p>And finally test it out!<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mail -s &quot;Test mail&quot; your_email@example.com &lt;&lt;&lt; &quot;A test message using Mailgun&quot;</span><br><span class="line">$ cat /var/log/maillog</span><br></pre></td></tr></table></figure><p></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://support.rackspace.com/how-to/setting-up-a-mail-relay/" target="_blank" rel="noopener">https://support.rackspace.com/how-to/setting-up-a-mail-relay/</a></li><li><a href="https://hakanu.net/linux/2017/04/23/making-crontab-send-email-through-mailgun/" target="_blank" rel="noopener">https://hakanu.net/linux/2017/04/23/making-crontab-send-email-through-mailgun/</a></li><li><a href="https://serverfault.com/questions/208882/on-centos-mail-or-mutt-never-sends-my-emails" target="_blank" rel="noopener">https://serverfault.com/questions/208882/on-centos-mail-or-mutt-never-sends-my-emails</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Install the dependencies:&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yum install postfi
      
    
    </summary>
    
    
      <category term="
- devops
- server
- linux
- tutorial" scheme="https://blog.birkhoff.me/tags/devops-server-linux-tutorial/"/>
    
  </entry>
  
  <entry>
    <title>Make cron send emails only on errors</title>
    <link href="https://blog.birkhoff.me/make-cron-send-email-only-on-error/"/>
    <id>https://blog.birkhoff.me/make-cron-send-email-only-on-error/</id>
    <published>2018-07-30T00:56:41.000Z</published>
    <updated>2018-07-30T01:05:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Stop using <code>&gt;/dev/null 2&gt;&amp;1</code>. Use <a href="https://habilis.net/cronic/" target="_blank" rel="noopener">https://habilis.net/cronic/</a>.</p><p>Cronic (somehow aka <code>chronic</code>, do they refer to the same thing?) has been a perfect workaround of the design failure of cron.</p><p>According to the official website of Cronic:</p><blockquote><p>Cronic is a small shim shell script for wrapping cron jobs so that cron only sends email when an error has occurred. Cronic defines an error as any non-trace error output or a non-zero result code.</p></blockquote><p>Clear enough. In other words, cronic only prints output when the script that it wraps encounters an issue, otherwise it runs silently.</p><p>On CentOS, install <code>chronic</code> with the following command:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ yum install moreutils</span><br></pre></td></tr></table></figure><p>and edit your crontab:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure><p>Remove <code>&gt;/dev/null 2&gt;&amp;1</code>, add <code>chronic</code> at the beginning of the command, like so:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 1 * * * cronic backup</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Stop using &lt;code&gt;&amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;. Use &lt;a href=&quot;https://habilis.net/cronic/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://habil
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Changing default shell for a non-root user on your Linux server without being asked for a password</title>
    <link href="https://blog.birkhoff.me/changing-default-shell-for-a-non-root-user-on-your-linux-server-without-being-asked-for-a-password/"/>
    <id>https://blog.birkhoff.me/changing-default-shell-for-a-non-root-user-on-your-linux-server-without-being-asked-for-a-password/</id>
    <published>2018-07-25T03:36:40.000Z</published>
    <updated>2018-07-25T03:40:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>When running <code>/usr/bin/chsh -s $(which zsh)</code>, chsh asked for a password, but there’s no password for my current user. If running this using sudo, <code>root</code>‘s default shell gets changed.</p><p>Simple &amp; fast solution: add the following line to the top of <code>/etc/pam.d/chsh</code><br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auth       sufficient   pam_shells.so</span><br></pre></td></tr></table></figure><p></p><p>If there’s <code>auth required pam_shells.so</code>, change <code>required</code> to <code>sufficient</code>.</p><p>(I personally suggest to revert the changes to <code>/etc/pam.d/chsh</code> after you finished changing the shell)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When running &lt;code&gt;/usr/bin/chsh -s $(which zsh)&lt;/code&gt;, chsh asked for a password, but there’s no password for my current user. If runni
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSHd asking for password when added public key to authorized_keys</title>
    <link href="https://blog.birkhoff.me/sshd-asking-password-added-key/"/>
    <id>https://blog.birkhoff.me/sshd-asking-password-added-key/</id>
    <published>2018-07-25T02:43:51.000Z</published>
    <updated>2018-08-22T07:04:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>It should be permission issues.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ chmod 700 ~/.ssh</span><br><span class="line">$ chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It should be permission issues.&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chmod 700 ~/.ssh
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Serve Traefik&#39;s internal dashboard behind Traefik itself</title>
    <link href="https://blog.birkhoff.me/serve-traefiks-internal-dashboard-behind-traefik/"/>
    <id>https://blog.birkhoff.me/serve-traefiks-internal-dashboard-behind-traefik/</id>
    <published>2018-07-22T22:33:57.000Z</published>
    <updated>2018-07-22T22:47:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>I have recently switched from <a href="https://github.com/jwilder/nginx-proxy" target="_blank" rel="noopener">jwilder/nginx-proxy</a> + <a href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion" target="_blank" rel="noopener">JrCs/docker-letsencrypt-nginx-proxy-companion</a> to a more powerful reverse proxy called <a href="https://traefik.io/" target="_blank" rel="noopener">Traefik</a>. Traefik has built-in ACME support, can be used as a load-balancer and (most importantly) has official Docker support!</p><p>When I was configuring Traefik’s internal dashboard (the good-looking web UI), I was thinking of serving it behind the proxy itself. But the documantation didn’t say how to do it. It only mentioned to serve the dashboard on a port other than 80 or 443, so you can only access with, for example, 111.222.333.444:7777. I wanted to use something like <a href="https://traefik.birkhoff.me" target="_blank" rel="noopener">traefik.birkhoff.me</a>.</p><p>Well, it needs a tricky hack.</p><p>You simply define a new entrypoint, I call it “traefik” here. Set the port number to anything you like. Finally give the Traefik container some traefik labels as you would to normal web containers.</p><p>Traefik.toml:<br></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[entryPoints]</span></span><br><span class="line">  <span class="string">[entryPoints.http]</span></span><br><span class="line">    <span class="string">address</span> <span class="string">=</span> <span class="string">":80"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">[entryPoints.http.redirect]</span></span><br><span class="line">      <span class="string">entryPoint</span> <span class="string">=</span> <span class="string">"https"</span></span><br><span class="line">      <span class="string">permanent</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="string">[entryPoints.https]</span></span><br><span class="line">    <span class="string">address</span> <span class="string">=</span> <span class="string">":443"</span></span><br><span class="line">    <span class="string">compress</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">[entryPoints.https.tls]</span></span><br><span class="line"></span><br><span class="line">  <span class="string">[entryPoints.traefik]</span></span><br><span class="line">    <span class="string">address</span> <span class="string">=</span> <span class="string">":9987"</span></span><br><span class="line">    <span class="string">compress</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="string">[entryPoints.traefik.auth.basic]</span></span><br><span class="line">      <span class="string">users</span> <span class="string">=</span> <span class="string">["123:456"]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[api]</span></span><br><span class="line">  <span class="string">entryPoint</span> <span class="string">=</span> <span class="string">"traefik"</span></span><br><span class="line">  <span class="string">dashboard</span> <span class="string">=</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p></p><p>docker-compose.yml:<br></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  traefik:</span></span><br><span class="line">    <span class="string">......</span></span><br><span class="line"><span class="attr">    expose:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9987</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"traefik.docker.network=traefik"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"traefik.enable=true"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"traefik.basic.frontend.rule=Host:traefik.birkhoff.me"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"traefik.basic.port=9987"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"traefik.basic.protocol=http"</span></span><br><span class="line">    <span class="string">......</span></span><br></pre></td></tr></table></figure><p></p><p>It’s somehow stupid tho.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I have recently switched from &lt;a href=&quot;https://github.com/jwilder/nginx-proxy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jwilder/nginx-proxy&lt;/a&gt; + &lt;
      
    
    </summary>
    
    
      <category term="
- server
- installation
- introduce
- docker
- devops
- tutorial
- web
- proxy
- network" scheme="https://blog.birkhoff.me/tags/server-installation-introduce-docker-devops-tutorial-web-proxy-network/"/>
    
  </entry>
  
</feed>
